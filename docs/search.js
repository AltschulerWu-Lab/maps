window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"maps.screens": {"fullname": "maps.screens", "modulename": "maps.screens", "kind": "module", "doc": "<p>Screens are the basic container for storing and running an entire analysis pipeline, including: data loading and preprocessing, exploratory figures, and quantitative analyses.</p>\n\n<p>The BaseScreen class is modality independent. Modality-specific Screen classes extend the <code>ScreenBase</code> class to handle loading of different data types.</p>\n"}, "maps.screens.ScreenBase": {"fullname": "maps.screens.ScreenBase", "modulename": "maps.screens", "qualname": "ScreenBase", "kind": "class", "doc": "<p>Base class for processing data from a screen.</p>\n\n<p>This class provides core functionality for loading, preprocessing, and analyzing\nscreening data. Modality-specific subclasses should extend this class to handle\ndata loading specific to their data type (e.g., imaging data).</p>\n\n<p>Attributes:</p>\n\n<ul>\n<li>params (dict): Analysis parameters including data paths, preprocessing steps,\nand analysis configurations.</li>\n<li>loader: Data loader instance specific to the data modality.</li>\n<li>data (pl.DataFrame): Polars DataFrame containing the screening data.</li>\n<li>metadata (pl.DataFrame): Polars DataFrame containing metadata for the screening data.</li>\n</ul>\n"}, "maps.screens.ScreenBase.__init__": {"fullname": "maps.screens.ScreenBase.__init__", "modulename": "maps.screens", "qualname": "ScreenBase.__init__", "kind": "function", "doc": "<p>Initialize a ScreenBase instance.</p>\n\n<p>Args:\n    params (dict): Analysis parameters dictionary.\n    loader: Loader class to be instantiated for data loading.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">params</span>, </span><span class=\"param\"><span class=\"n\">loader</span></span>)</span>"}, "maps.screens.ScreenBase.params": {"fullname": "maps.screens.ScreenBase.params", "modulename": "maps.screens", "qualname": "ScreenBase.params", "kind": "variable", "doc": "<p></p>\n"}, "maps.screens.ScreenBase.loader": {"fullname": "maps.screens.ScreenBase.loader", "modulename": "maps.screens", "qualname": "ScreenBase.loader", "kind": "variable", "doc": "<p></p>\n"}, "maps.screens.ScreenBase.data": {"fullname": "maps.screens.ScreenBase.data", "modulename": "maps.screens", "qualname": "ScreenBase.data", "kind": "variable", "doc": "<p></p>\n"}, "maps.screens.ScreenBase.metadata": {"fullname": "maps.screens.ScreenBase.metadata", "modulename": "maps.screens", "qualname": "ScreenBase.metadata", "kind": "variable", "doc": "<p></p>\n"}, "maps.screens.ScreenBase.get_response": {"fullname": "maps.screens.ScreenBase.get_response", "modulename": "maps.screens", "qualname": "ScreenBase.get_response", "kind": "function", "doc": "<p>Generate response vector from metadata.</p>\n\n<p>Extracts response values specified by the <code>analysis.MAP.response</code> key in\n<code>params</code>.</p>\n\n<p>Args:\n    encode_categorical (bool, optional): Whether to encode categorical variables\n        as numeric. Defaults to True.</p>\n\n<p>Returns:\n    list: List of numpy arrays containing response values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">encode_categorical</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.screens.ScreenBase.get_data": {"fullname": "maps.screens.ScreenBase.get_data", "modulename": "maps.screens", "qualname": "ScreenBase.get_data", "kind": "function", "doc": "<p>Get the data matrix.</p>\n\n<p>Returns:\n    pl.DataFrame: The screening data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.screens.ScreenBase.preprocess": {"fullname": "maps.screens.ScreenBase.preprocess", "modulename": "maps.screens", "qualname": "ScreenBase.preprocess", "kind": "function", "doc": "<p>Run all preprocessing steps specified in params.</p>\n\n<p>Iterates through preprocessing functions defined in <code>params['preprocess']</code>\nand applies them sequentially to the data and metadata.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.screens.ImageScreen": {"fullname": "maps.screens.ImageScreen", "modulename": "maps.screens", "qualname": "ImageScreen", "kind": "class", "doc": "<p>Screen class for single-antibody imaging data.</p>\n\n<p>This class handles loading and processing of imaging data from a single antibody\ncombination. Data are loaded as polars DataFrames with single-cell measurements\nin the <code>data</code> attribute and well-level metadata in the <code>metadata</code> attribute.</p>\n\n<p>Attributes:</p>\n\n<ul>\n<li>preprocessed (bool): Whether preprocessing has been completed.</li>\n<li>loaded (bool): Whether data has been loaded.</li>\n<li>data (pl.DataFrame): Single-cell measurements (one row per cell).</li>\n<li>metadata (pl.DataFrame): Well-level metadata (one row per imaging well).</li>\n</ul>\n\n<p>Example:</p>\n\n<pre><code>&gt;&gt;&gt; screen = ImageScreen(params)\n&gt;&gt;&gt; screen.load(antibody=\"COX IV/Galectin3/atubulin\")\n&gt;&gt;&gt; screen.preprocess()\n</code></pre>\n", "bases": "ScreenBase"}, "maps.screens.ImageScreen.__init__": {"fullname": "maps.screens.ImageScreen.__init__", "modulename": "maps.screens", "qualname": "ImageScreen.__init__", "kind": "function", "doc": "<p>Initialize an ImageScreen instance.</p>\n\n<p>Args:\n    params (dict): Analysis parameters dictionary.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">params</span></span>)</span>"}, "maps.screens.ImageScreen.preprocessed": {"fullname": "maps.screens.ImageScreen.preprocessed", "modulename": "maps.screens", "qualname": "ImageScreen.preprocessed", "kind": "variable", "doc": "<p></p>\n"}, "maps.screens.ImageScreen.loaded": {"fullname": "maps.screens.ImageScreen.loaded", "modulename": "maps.screens", "qualname": "ImageScreen.loaded", "kind": "variable", "doc": "<p></p>\n"}, "maps.screens.ImageScreen.load": {"fullname": "maps.screens.ImageScreen.load", "modulename": "maps.screens", "qualname": "ImageScreen.load", "kind": "function", "doc": "<p>Load data for a single antibody combination.</p>\n\n<p>Args:\n    antibody (str, optional): Antibody combination to load. If None, uses\n        the 'antibody' key from params. Defaults to None.</p>\n\n<p>Raises:\n    ValueError: If a list of antibodies is provided (use ImageScreenMultiAntibody instead).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">antibody</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.screens.ImageScreenMultiAntibody": {"fullname": "maps.screens.ImageScreenMultiAntibody", "modulename": "maps.screens", "qualname": "ImageScreenMultiAntibody", "kind": "class", "doc": "<p>Screen class for multi-antibody imaging data.</p>\n\n<p>This class handles loading and processing of imaging data from multiple antibody\ncombinations simultaneously. Data are organized as dictionaries where keys are\nantibody names and values are polars DataFrames.</p>\n\n<p>Attributes:</p>\n\n<ul>\n<li>preprocessed (bool): Whether preprocessing has been completed.</li>\n<li>data (dict): Dictionary mapping antibody names to single-cell measurement DataFrames.</li>\n<li>metadata (dict): Dictionary mapping antibody names to well-level metadata DataFrames.</li>\n</ul>\n\n<p>Example:</p>\n\n<pre><code>&gt;&gt;&gt; mscreen = ImageScreenMultiAntibody(params)\n&gt;&gt;&gt; mscreen.load(antibody=[\"FUS/EEA1\", \"COX IV/Galectin3/atubulin\"])\n&gt;&gt;&gt; mscreen.preprocess()\n</code></pre>\n", "bases": "ScreenBase"}, "maps.screens.ImageScreenMultiAntibody.__init__": {"fullname": "maps.screens.ImageScreenMultiAntibody.__init__", "modulename": "maps.screens", "qualname": "ImageScreenMultiAntibody.__init__", "kind": "function", "doc": "<p>Initialize an ImageScreenMultiAntibody instance.</p>\n\n<p>Args:\n    params (dict): Analysis parameters dictionary.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">params</span></span>)</span>"}, "maps.screens.ImageScreenMultiAntibody.preprocessed": {"fullname": "maps.screens.ImageScreenMultiAntibody.preprocessed", "modulename": "maps.screens", "qualname": "ImageScreenMultiAntibody.preprocessed", "kind": "variable", "doc": "<p></p>\n"}, "maps.screens.ImageScreenMultiAntibody.load": {"fullname": "maps.screens.ImageScreenMultiAntibody.load", "modulename": "maps.screens", "qualname": "ImageScreenMultiAntibody.load", "kind": "function", "doc": "<p>Load data for multiple antibody combinations.</p>\n\n<p>Data are grouped by antibody, with each antibody's data stored separately\nin the data and metadata dictionaries.</p>\n\n<p>Args:\n    antibody (list or str, optional): Antibody combinations to load. If None,\n        uses the 'antibody' key from params. Defaults to None.</p>\n\n<p>Raises:\n    AssertionError: If antibody is None and not specified in params.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">antibody</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"fullname": "maps.screens.ImageScreenMultiAntibody.preprocess", "modulename": "maps.screens", "qualname": "ImageScreenMultiAntibody.preprocess", "kind": "function", "doc": "<p>Run preprocessing steps for each antibody dataset.</p>\n\n<p>Applies all preprocessing functions defined in params to each antibody's\ndata independently, maintaining alignment across samples.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.screens.ImageScreenMultiAntibody.get_response": {"fullname": "maps.screens.ImageScreenMultiAntibody.get_response", "modulename": "maps.screens", "qualname": "ImageScreenMultiAntibody.get_response", "kind": "function", "doc": "<p>Generate response vectors for each antibody from metadata.</p>\n\n<p>Extracts response values specified by the analysis.MAP.response key in params\nfor each antibody dataset. Validates that all antibodies have the same set of\nresponse categories.</p>\n\n<p>Args:\n    encode_categorical (bool, optional): Whether to encode categorical variables\n        as numeric. Defaults to True.</p>\n\n<p>Returns:\n    dict: Dictionary mapping antibody names to lists of numpy arrays containing\n        response values.</p>\n\n<p>Raises:\n    AssertionError: If response is not specified in params or if different\n        antibodies have different response categories.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">encode_categorical</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.processing": {"fullname": "maps.processing", "modulename": "maps.processing", "kind": "module", "doc": "<p>Processing modules are used for data preprocessing. All processing modules operate on and return <code>Screen</code> objects. Additional kwargs for each preprocessing function are specified through the params.json file and read by each preprocessing function as necessary.</p>\n"}, "maps.processing.drop_na_features": {"fullname": "maps.processing.drop_na_features", "modulename": "maps.processing", "qualname": "drop_na_features", "kind": "function", "doc": "<p>Drop columns exceeding NA threshold, replace remaining NAs with mean.</p>\n\n<p>Removes features with more than a specified proportion of missing values,\nthen imputes remaining missing values with column means.</p>\n\n<p>Args:\n    x (ScreenBase): Screen object with data and metadata.\n    **kwargs: Additional arguments:\n        - <code>na_prop</code> (float): Maximum NA proportion for columns to be kept.\n            Columns with NA proportion &gt; na_prop will be dropped.</p>\n\n<p>Returns:\n    ScreenBase: Modified screen object with NAs handled.</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">screen</span> <span class=\"o\">=</span> <span class=\"n\">drop_na_features</span><span class=\"p\">(</span><span class=\"n\">screen</span><span class=\"p\">,</span> <span class=\"n\">na_prop</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>:</span></span>", "funcdef": "def"}, "maps.processing.drop_constant_features": {"fullname": "maps.processing.drop_constant_features", "modulename": "maps.processing", "qualname": "drop_constant_features", "kind": "function", "doc": "<p>Drop features with no variance (constant values).</p>\n\n<p>Removes columns where all values are identical, as these provide no\ninformation for analysis.</p>\n\n<p>Args:\n    x (ScreenBase): Screen object with data and metadata.</p>\n\n<p>Returns:\n    ScreenBase: Modified screen object with constant features removed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span></span><span class=\"return-annotation\">) -> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>:</span></span>", "funcdef": "def"}, "maps.processing.select_feature_types": {"fullname": "maps.processing.select_feature_types", "modulename": "maps.processing", "qualname": "select_feature_types", "kind": "function", "doc": "<p>Select features by regex pattern matching.</p>\n\n<p>Keeps only features whose names match the specified regex pattern. Useful\nfor filtering to specific feature types (e.g., intensity, spot features).\nThe ID column is always retained.</p>\n\n<p>Args:\n    x (ScreenBase): Screen object with data and metadata.\n    <em>*kwargs: Additional arguments:\n        - <code>feature_str</code> (str): Regex pattern to match feature names.\n            Must start with '^' and end with '$'. Use '|' to match multiple\n            patterns (e.g., \"^.</em>Intensity.<em>$|^.</em>Spot.*$\").</p>\n\n<p>Returns:\n    ScreenBase: Modified screen object with only matching features.</p>\n\n<p>Raises:\n    Exception: If regex string doesn't start with '^' and end with '$'.</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Keep only intensity and spot features</span>\n<span class=\"n\">screen</span> <span class=\"o\">=</span> <span class=\"n\">select_feature_types</span><span class=\"p\">(</span><span class=\"n\">screen</span><span class=\"p\">,</span> \n    <span class=\"n\">feature_str</span><span class=\"o\">=</span><span class=\"s2\">&quot;^.*Intensity.*$|^.*Spot.*$&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>:</span></span>", "funcdef": "def"}, "maps.processing.drop_feature_types": {"fullname": "maps.processing.drop_feature_types", "modulename": "maps.processing", "qualname": "drop_feature_types", "kind": "function", "doc": "<p>Drop features by regex pattern matching.</p>\n\n<p>Removes features whose names match the specified regex pattern. Useful for\nexcluding unwanted feature types (e.g., sum features, specific channels).</p>\n\n<p>Args:\n    x (ScreenBase): Screen object with data and metadata.\n    <em>*kwargs: Additional arguments:\n        - <code>feature_str</code> (str): Regex pattern to match feature names for removal.\n            Must start with '^' and end with '$'. Use '|' to match multiple\n            patterns (e.g., \"^.</em>Sum.<em>$|^.</em>HOECHST.*$\").</p>\n\n<p>Returns:\n    ScreenBase: Modified screen object with matching features removed.</p>\n\n<p>Raises:\n    Exception: If regex string doesn't start with '^' and end with '$'.</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Drop sum and HOECHST features</span>\n<span class=\"n\">screen</span> <span class=\"o\">=</span> <span class=\"n\">drop_feature_types</span><span class=\"p\">(</span><span class=\"n\">screen</span><span class=\"p\">,</span> \n    <span class=\"n\">feature_str</span><span class=\"o\">=</span><span class=\"s2\">&quot;^.*Sum.*$|^.*HOECHST.*$&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>:</span></span>", "funcdef": "def"}, "maps.processing.select_sample_by_feature": {"fullname": "maps.processing.select_sample_by_feature", "modulename": "maps.processing", "qualname": "select_sample_by_feature", "kind": "function", "doc": "<p>Filter to samples whose metadata matches specified values.</p>\n\n<p>Keeps only wells/samples where metadata features match the specified values.\nMultiple criteria can be combined, and only samples matching all criteria\nare retained.</p>\n\n<p>Args:\n    x (ScreenBase): Screen object with data and metadata.\n    **kwargs: Additional arguments:\n        - <code>select_key</code> (List[Dict]): List of dicts specifying selection criteria.\n            Each dict has metadata column names as keys and lists of values\n            to keep as values.</p>\n\n<p>Returns:\n    ScreenBase: Modified screen object with only matching samples.</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Keep only DMSO-treated WT and C9orf72 samples</span>\n<span class=\"n\">screen</span> <span class=\"o\">=</span> <span class=\"n\">select_sample_by_feature</span><span class=\"p\">(</span><span class=\"n\">screen</span><span class=\"p\">,</span> <span class=\"n\">select_key</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;Drugs&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;DMSO&quot;</span><span class=\"p\">]},</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;Mutations&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;WT&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;C9orf72&quot;</span><span class=\"p\">]}</span>\n<span class=\"p\">])</span>\n</code></pre>\n</div>\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>:</span></span>", "funcdef": "def"}, "maps.processing.drop_sample_by_feature": {"fullname": "maps.processing.drop_sample_by_feature", "modulename": "maps.processing", "qualname": "drop_sample_by_feature", "kind": "function", "doc": "<p>Filter out samples whose metadata matches specified values.</p>\n\n<p>Removes wells/samples where metadata features match the specified values.\nMultiple criteria can be combined to exclude various sample types.</p>\n\n<p>Args:\n    x (ScreenBase): Screen object with data and metadata.\n    **kwargs: Additional arguments:\n        - <code>drop_key</code> (List[Dict]): List of dicts specifying exclusion criteria.\n            Each dict has metadata column names as keys and lists of values\n            to exclude as values.</p>\n\n<p>Returns:\n    ScreenBase: Modified screen object with matching samples removed.</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Drop specific problematic cell lines</span>\n<span class=\"n\">screen</span> <span class=\"o\">=</span> <span class=\"n\">drop_sample_by_feature</span><span class=\"p\">(</span><span class=\"n\">screen</span><span class=\"p\">,</span> <span class=\"n\">drop_key</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;CellLines&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;C9014&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NS048&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FTD37&quot;</span><span class=\"p\">]},</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;Mutations&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;TDP43&quot;</span><span class=\"p\">]}</span>\n<span class=\"p\">])</span>\n</code></pre>\n</div>\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>:</span></span>", "funcdef": "def"}, "maps.processing.drop_cells_by_count": {"fullname": "maps.processing.drop_cells_by_count", "modulename": "maps.processing", "qualname": "drop_cells_by_count", "kind": "function", "doc": "<p>Drop cell lines based on average cell count thresholds.</p>\n\n<p>Filters out cell lines with average cell counts outside the specified range.\nUseful for quality control to remove wells with poor imaging or cell health.</p>\n\n<p>Args:\n    x (ScreenBase): Screen object with data and metadata.\n    **kwargs: Additional arguments:\n        - <code>min_count</code> (int, optional): Minimum average cell count. Defaults to 0.\n        - <code>max_count</code> (int, optional): Maximum average cell count. Defaults to inf.</p>\n\n<p>Returns:\n    ScreenBase: Modified screen object with filtered cell lines.</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Keep only cell lines with 100-1000 cells on average</span>\n<span class=\"n\">screen</span> <span class=\"o\">=</span> <span class=\"n\">drop_cells_by_count</span><span class=\"p\">(</span><span class=\"n\">screen</span><span class=\"p\">,</span> <span class=\"n\">min_count</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">max_count</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>:</span></span>", "funcdef": "def"}, "maps.processing.drop_cells_by_feature_qt": {"fullname": "maps.processing.drop_cells_by_feature_qt", "modulename": "maps.processing", "qualname": "drop_cells_by_feature_qt", "kind": "function", "doc": "<p>Drop cells by feature quantile filtering within ID groups.</p>\n\n<p>Removes individual cells with extreme feature values (outliers) based on\nquantile thresholds. Filtering is applied per well (ID group) to handle\nwell-to-well variation. Cells in the lower and upper quantiles are removed.</p>\n\n<p>Args:\n    x (ScreenBase): Screen object with data and metadata.\n    **kwargs: Additional arguments:\n        - <code>feature_filters</code> (Dict[str, float]): Dict mapping feature names to\n            quantile thresholds. Cells below quantile and above (1-quantile)\n            are removed for each feature.</p>\n\n<p>Returns:\n    ScreenBase: Modified screen object with outlier cells removed.</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Remove cells in bottom/top 5% for area features</span>\n<span class=\"n\">screen</span> <span class=\"o\">=</span> <span class=\"n\">drop_cells_by_feature_qt</span><span class=\"p\">(</span><span class=\"n\">screen</span><span class=\"p\">,</span> <span class=\"n\">feature_filters</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;Nucleus_Region_Area_[\u00b5m\u00b2]&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Cell_Region_Area_[\u00b5m\u00b2]&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.05</span>\n<span class=\"p\">})</span>\n</code></pre>\n</div>\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>:</span></span>", "funcdef": "def"}, "maps.processing.subsample_rows_by_id": {"fullname": "maps.processing.subsample_rows_by_id", "modulename": "maps.processing", "qualname": "subsample_rows_by_id", "kind": "function", "doc": "<p>Randomly subsample n cells from each well (ID group).</p>\n\n<p>Reduces the number of cells per well to a fixed number, useful for\ncomputational efficiency or balanced sampling across wells.</p>\n\n<p>Args:\n    x (ScreenBase): Screen object with data and metadata.\n    **kwargs: Additional arguments:\n        - <code>n</code> (int, optional): Number of cells to sample per well. Defaults to 100.\n        - <code>seed</code> (int, optional): Random seed for reproducibility. Defaults to 47.</p>\n\n<p>Returns:\n    ScreenBase: Modified screen object with subsampled cells.</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Sample 250 cells per well</span>\n<span class=\"n\">screen</span> <span class=\"o\">=</span> <span class=\"n\">subsample_rows_by_id</span><span class=\"p\">(</span><span class=\"n\">screen</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">250</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>:</span></span>", "funcdef": "def"}, "maps.processing.pca_transform": {"fullname": "maps.processing.pca_transform", "modulename": "maps.processing", "qualname": "pca_transform", "kind": "function", "doc": "<p>Perform PCA transformation on features grouped by marker.</p>\n\n<p>Applies PCA within each feature group (e.g., by marker/antibody) and retains\nprincipal components explaining the specified variance threshold. Reduces\ndimensionality while preserving group structure.</p>\n\n<p>Args:\n    x (ScreenBase): Screen object with data and metadata.\n    **kwargs: Additional arguments:\n        - <code>alpha</code> (float): Minimum percent variance to explain (0-1).\n        - <code>groups</code> (List[str]): List of regex patterns for grouping features.\n            Features matching each pattern form a group for separate PCA.\n            Unmatched features are grouped separately.</p>\n\n<p>Returns:\n    ScreenBase: Modified screen object with PCA-transformed features.</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># PCA by marker, keeping 90% variance</span>\n<span class=\"n\">screen</span> <span class=\"o\">=</span> <span class=\"n\">pca_transform</span><span class=\"p\">(</span><span class=\"n\">screen</span><span class=\"p\">,</span> \n    <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.9</span><span class=\"p\">,</span> \n    <span class=\"n\">groups</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;^.*FUS.*$&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;^.*EEA1.*$&quot;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>:</span></span>", "funcdef": "def"}, "maps.processing.group_markers": {"fullname": "maps.processing.group_markers", "modulename": "maps.processing", "qualname": "group_markers", "kind": "function", "doc": "<p>Reformat data by grouping features into specified marker groups.</p>\n\n<p>Organizes features into groups based on regex matching. Useful for\nstructuring multi-marker data or organizing features by type.</p>\n\n<p>Args:\n    x (ScreenBase): Screen object with data and metadata.\n    **kwargs: Additional arguments:\n        - <code>groups</code> (List[str]): List of regex patterns for grouping features.\n            Features matching each pattern are grouped together. Unmatched\n            features are grouped separately.</p>\n\n<p>Returns:\n    ScreenBase: Modified screen object with grouped features.</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Group features by marker</span>\n<span class=\"n\">screen</span> <span class=\"o\">=</span> <span class=\"n\">group_markers</span><span class=\"p\">(</span><span class=\"n\">screen</span><span class=\"p\">,</span> \n    <span class=\"n\">groups</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;^.*FUS.*$&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;^.*EEA1.*$&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;^.*COX.*$&quot;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>:</span></span>", "funcdef": "def"}, "maps.processing.standardize_features": {"fullname": "maps.processing.standardize_features", "modulename": "maps.processing", "qualname": "standardize_features", "kind": "function", "doc": "<p>Standardize features by removing mean and scaling to unit variance.</p>\n\n<p>Z-score normalization: subtracts mean and divides by standard deviation\nfor each feature. The ID column is preserved without transformation.</p>\n\n<p>Args:\n    x (ScreenBase): Screen object with data and metadata.</p>\n\n<p>Returns:\n    ScreenBase: Modified screen object with standardized features.</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">screen</span> <span class=\"o\">=</span> <span class=\"n\">standardize_features</span><span class=\"p\">(</span><span class=\"n\">screen</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span></span><span class=\"return-annotation\">) -> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>:</span></span>", "funcdef": "def"}, "maps.models": {"fullname": "maps.models", "modulename": "maps.models", "kind": "module", "doc": "<p>Model wrappers and implementations used by the MAP pipeline.</p>\n\n<p>This module provides a lightweight abstraction for classification models used\nto compute MAP scores. Subclasses of <code>BaseModel</code> implement fitting,\nprediction, and feature-importance extraction for a variety of model types\nincluding scikit-learn and PyTorch based implementations.</p>\n\n<p>Module variables:</p>\n\n<ul>\n<li><code>DEFAULT_SEED</code> (int): Default random seed used when not specified in params.</li>\n</ul>\n"}, "maps.models.DEFAULT_SEED": {"fullname": "maps.models.DEFAULT_SEED", "modulename": "maps.models", "qualname": "DEFAULT_SEED", "kind": "variable", "doc": "<p></p>\n", "default_value": "47"}, "maps.models.BaseModel": {"fullname": "maps.models.BaseModel", "modulename": "maps.models", "qualname": "BaseModel", "kind": "class", "doc": "<p>Base class for all classification models.</p>\n\n<p>This class serves as a wrapper for fitting models, generating predictions, and\ncomputing feature importances. Subclasses should implement specific model logic\nin <code>fit()</code>, <code>predict()</code>, and <code>get_importance()</code> methods.</p>\n\n<p>Attributes:</p>\n\n<ul>\n<li>params (dict): Model parameters and configuration.</li>\n<li>model: The underlying model object (implementation-specific).</li>\n<li>fitted (bool): Whether the model has been fitted to data.</li>\n</ul>\n"}, "maps.models.BaseModel.__init__": {"fullname": "maps.models.BaseModel.__init__", "modulename": "maps.models", "qualname": "BaseModel.__init__", "kind": "function", "doc": "<p>Initialize a BaseModel instance.</p>\n\n<p>Args:\n    **kwargs: Arbitrary keyword arguments for model configuration.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "maps.models.BaseModel.params": {"fullname": "maps.models.BaseModel.params", "modulename": "maps.models", "qualname": "BaseModel.params", "kind": "variable", "doc": "<p></p>\n"}, "maps.models.BaseModel.model": {"fullname": "maps.models.BaseModel.model", "modulename": "maps.models", "qualname": "BaseModel.model", "kind": "variable", "doc": "<p></p>\n"}, "maps.models.BaseModel.fitted": {"fullname": "maps.models.BaseModel.fitted", "modulename": "maps.models", "qualname": "BaseModel.fitted", "kind": "variable", "doc": "<p></p>\n"}, "maps.models.BaseModel.fit": {"fullname": "maps.models.BaseModel.fit", "modulename": "maps.models", "qualname": "BaseModel.fit", "kind": "function", "doc": "<p>Fit the model to training data.</p>\n\n<p>Args:\n    x (pl.DataFrame, optional): Feature matrix. Defaults to None.\n    y (np.ndarray, optional): Response vector. Defaults to None.\n    id_train (list, optional): IDs of training samples. Defaults to None.\n    data_loader (DataLoader, optional): PyTorch DataLoader for batch training.\n        Defaults to None.</p>\n\n<p>Returns:\n    None</p>\n\n<p>Note:\n    This method should be implemented by subclasses.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">id_train</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">data_loader</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.models.BaseModel.predict": {"fullname": "maps.models.BaseModel.predict", "modulename": "maps.models", "qualname": "BaseModel.predict", "kind": "function", "doc": "<p>Generate predictions for test data.</p>\n\n<p>Args:\n    x (pl.DataFrame, optional): Feature matrix. Defaults to None.\n    y (np.ndarray, optional): Response vector. Defaults to None.\n    id_test (list, optional): IDs of test samples. Defaults to None.\n    data_loader (DataLoader, optional): PyTorch DataLoader for batch prediction.\n        Defaults to None.</p>\n\n<p>Returns:\n    pl.DataFrame: Predictions with ID column and probability columns.</p>\n\n<p>Note:\n    This method should be implemented by subclasses.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">id_test</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">data_loader</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.models.BaseModel.get_importance": {"fullname": "maps.models.BaseModel.get_importance", "modulename": "maps.models", "qualname": "BaseModel.get_importance", "kind": "function", "doc": "<p>Extract feature importances from the fitted model.</p>\n\n<p>Args:\n    x (pl.DataFrame, optional): Feature matrix used for training. Defaults to None.</p>\n\n<p>Returns:\n    pd.Series or None: Feature importances sorted in descending order, or None\n        if not implemented.</p>\n\n<p>Note:\n    This method should be implemented by subclasses.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.models.SKLearnModel": {"fullname": "maps.models.SKLearnModel", "modulename": "maps.models", "qualname": "SKLearnModel", "kind": "class", "doc": "<p>Base class for all scikit-learn based models.</p>\n\n<p>Attributes:\n    model_type (str): Type identifier set to \"sklearn\".</p>\n", "bases": "BaseModel"}, "maps.models.SKLearnModel.__init__": {"fullname": "maps.models.SKLearnModel.__init__", "modulename": "maps.models", "qualname": "SKLearnModel.__init__", "kind": "function", "doc": "<p>Initialize an SKLearnModel instance.</p>\n\n<p>Args:\n    **kwargs: Arbitrary keyword arguments passed to BaseModel.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "maps.models.SKLearnModel.model_type": {"fullname": "maps.models.SKLearnModel.model_type", "modulename": "maps.models", "qualname": "SKLearnModel.model_type", "kind": "variable", "doc": "<p></p>\n"}, "maps.models.PyTorchModel": {"fullname": "maps.models.PyTorchModel", "modulename": "maps.models", "qualname": "PyTorchModel", "kind": "class", "doc": "<p>Base class for all PyTorch based models.</p>\n\n<p>Attributes:\n    model_type (str): Type identifier set to \"pytorch\".</p>\n", "bases": "BaseModel"}, "maps.models.PyTorchModel.__init__": {"fullname": "maps.models.PyTorchModel.__init__", "modulename": "maps.models", "qualname": "PyTorchModel.__init__", "kind": "function", "doc": "<p>Initialize a PyTorchModel instance.</p>\n\n<p>Args:\n    **kwargs: Arbitrary keyword arguments for model configuration.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "maps.models.PyTorchModel.params": {"fullname": "maps.models.PyTorchModel.params", "modulename": "maps.models", "qualname": "PyTorchModel.params", "kind": "variable", "doc": "<p></p>\n"}, "maps.models.PyTorchModel.model_type": {"fullname": "maps.models.PyTorchModel.model_type", "modulename": "maps.models", "qualname": "PyTorchModel.model_type", "kind": "variable", "doc": "<p></p>\n"}, "maps.models.Logistic": {"fullname": "maps.models.Logistic", "modulename": "maps.models", "qualname": "Logistic", "kind": "class", "doc": "<p>Logistic regression model for multi-class classification.</p>\n\n<p>This model uses scikit-learn's LogisticRegression with feature scaling and\nbalanced sampling during training.</p>\n\n<p>Attributes:\n    scaler (StandardScaler): Scaler for feature normalization.\n    model (LogisticRegression): The underlying logistic regression model.\n    fitted (bool): Whether the model has been fitted.\n    scaled (bool): Whether the scaler has been fitted.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model = Logistic(model={\"Logistic\": {\"max_iter\": 1000}})\n      model.fit(x_train, y_train)\n      predictions = model.predict(x_test)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "bases": "SKLearnModel"}, "maps.models.Logistic.__init__": {"fullname": "maps.models.Logistic.__init__", "modulename": "maps.models", "qualname": "Logistic.__init__", "kind": "function", "doc": "<p>Initialize a Logistic model.</p>\n\n<p>Args:\n    **kwargs: Model parameters. Can include a 'model' dict with 'Logistic'\n        or 'BinaryLogistic' keys containing sklearn LogisticRegression parameters.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "maps.models.Logistic.scaler": {"fullname": "maps.models.Logistic.scaler", "modulename": "maps.models", "qualname": "Logistic.scaler", "kind": "variable", "doc": "<p></p>\n"}, "maps.models.Logistic.model": {"fullname": "maps.models.Logistic.model", "modulename": "maps.models", "qualname": "Logistic.model", "kind": "variable", "doc": "<p></p>\n"}, "maps.models.Logistic.fitted": {"fullname": "maps.models.Logistic.fitted", "modulename": "maps.models", "qualname": "Logistic.fitted", "kind": "variable", "doc": "<p></p>\n"}, "maps.models.Logistic.scaled": {"fullname": "maps.models.Logistic.scaled", "modulename": "maps.models", "qualname": "Logistic.scaled", "kind": "variable", "doc": "<p></p>\n"}, "maps.models.Logistic.fit": {"fullname": "maps.models.Logistic.fit", "modulename": "maps.models", "qualname": "Logistic.fit", "kind": "function", "doc": "<p>Fit the logistic regression model.</p>\n\n<p>Args:\n    x (pl.DataFrame): Feature matrix with ID column.\n    y (list): List containing response array(s).\n    id_train (list, optional): IDs of training samples. If None, uses all samples.\n        Defaults to None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">id_train</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.models.Logistic.predict": {"fullname": "maps.models.Logistic.predict", "modulename": "maps.models", "qualname": "Logistic.predict", "kind": "function", "doc": "<p>Generate probability predictions.</p>\n\n<p>Args:\n    x (pl.DataFrame): Feature matrix with ID column.\n    id_test (list, optional): IDs of test samples. If None, uses all samples.\n        Defaults to None.</p>\n\n<p>Returns:\n    pl.DataFrame: Predictions with ID and probability columns (Ypred0, Ypred1, etc.).</p>\n\n<p>Raises:\n    AssertionError: If model has not been fitted or scaler has not been fitted.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">id_test</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.models.Logistic.get_importance": {"fullname": "maps.models.Logistic.get_importance", "modulename": "maps.models", "qualname": "Logistic.get_importance", "kind": "function", "doc": "<p>Extract feature importances from the fitted model.</p>\n\n<p>Args:\n    x (pl.DataFrame, optional): Feature matrix used for training. Defaults to None.</p>\n\n<p>Returns:\n    pd.Series or None: Feature importances sorted in descending order, or None\n        if not implemented.</p>\n\n<p>Note:\n    This method should be implemented by subclasses.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">polars</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.models.BinaryLogistic": {"fullname": "maps.models.BinaryLogistic", "modulename": "maps.models", "qualname": "BinaryLogistic", "kind": "class", "doc": "<p>Logistic regression for binary classification.</p>\n\n<p>Extends the Logistic class but returns only the probability for the positive class.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model = BinaryLogistic(model={\"BinaryLogistic\": {\"C\": 1.0}})\n      model.fit(x_train, y_train)\n      predictions = model.predict(x_test)  # Returns Ypred column only</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "bases": "Logistic"}, "maps.models.BinaryLogistic.predict": {"fullname": "maps.models.BinaryLogistic.predict", "modulename": "maps.models", "qualname": "BinaryLogistic.predict", "kind": "function", "doc": "<p>Generate binary probability predictions.</p>\n\n<p>Args:\n    x (pl.DataFrame): Feature matrix with ID column.\n    id_test (list, optional): IDs of test samples. Defaults to None.</p>\n\n<p>Returns:\n    pl.DataFrame: Predictions with ID and Ypred columns (positive class probability).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">id_test</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.models.RandomForest": {"fullname": "maps.models.RandomForest", "modulename": "maps.models", "qualname": "RandomForest", "kind": "class", "doc": "<p>Random forest classifier for multi-class classification.</p>\n\n<p>This model uses scikit-learn's RandomForestClassifier with balanced sampling\nduring training.</p>\n\n<p>Attributes:\n    model (RandomForestClassifier): The underlying random forest model.\n    fitted (bool): Whether the model has been fitted.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model = RandomForest(model={\"RandomForest\": {\"n_estimators\": 100}})\n      model.fit(x_train, y_train)\n      predictions = model.predict(x_test)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "bases": "SKLearnModel"}, "maps.models.RandomForest.__init__": {"fullname": "maps.models.RandomForest.__init__", "modulename": "maps.models", "qualname": "RandomForest.__init__", "kind": "function", "doc": "<p>Initialize a RandomForest model.</p>\n\n<p>Args:\n    **kwargs: Model parameters. Can include a 'model' dict with 'RandomForest'\n        or 'BinaryRandomForest' keys containing sklearn RandomForestClassifier\n        parameters.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "maps.models.RandomForest.model": {"fullname": "maps.models.RandomForest.model", "modulename": "maps.models", "qualname": "RandomForest.model", "kind": "variable", "doc": "<p></p>\n"}, "maps.models.RandomForest.fitted": {"fullname": "maps.models.RandomForest.fitted", "modulename": "maps.models", "qualname": "RandomForest.fitted", "kind": "variable", "doc": "<p></p>\n"}, "maps.models.RandomForest.fit": {"fullname": "maps.models.RandomForest.fit", "modulename": "maps.models", "qualname": "RandomForest.fit", "kind": "function", "doc": "<p>Fit the random forest model.</p>\n\n<p>Args:\n    x (pl.DataFrame): Feature matrix with ID column.\n    y (list): List containing response array(s).\n    id_train (list, optional): IDs of training samples. If None, uses all samples.\n        Defaults to None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">id_train</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.models.RandomForest.predict": {"fullname": "maps.models.RandomForest.predict", "modulename": "maps.models", "qualname": "RandomForest.predict", "kind": "function", "doc": "<p>Generate class predictions.</p>\n\n<p>Args:\n    x (pl.DataFrame): Feature matrix with ID column.\n    id_test (list, optional): IDs of test samples. If None, uses all samples.\n        Defaults to None.</p>\n\n<p>Returns:\n    pl.DataFrame: Predictions with ID and Ypred columns (predicted class).</p>\n\n<p>Raises:\n    AssertionError: If model has not been fitted.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">id_test</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.models.RandomForest.get_importance": {"fullname": "maps.models.RandomForest.get_importance", "modulename": "maps.models", "qualname": "RandomForest.get_importance", "kind": "function", "doc": "<p>Extract feature importances from the random forest.</p>\n\n<p>Args:\n    x (pl.DataFrame): Feature matrix with ID column and feature columns.</p>\n\n<p>Returns:\n    pd.Series: Feature importances sorted in descending order.</p>\n\n<p>Raises:\n    AssertionError: If model has not been fitted.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">polars</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.models.BinaryRandomForest": {"fullname": "maps.models.BinaryRandomForest", "modulename": "maps.models", "qualname": "BinaryRandomForest", "kind": "class", "doc": "<p>Random forest classifier for binary classification.</p>\n\n<p>Extends the RandomForest class for binary classification tasks.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model = BinaryRandomForest(model={\"BinaryRandomForest\": {\"n_estimators\": 50}})\n      model.fit(x_train, y_train)\n      predictions = model.predict(x_test)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "bases": "RandomForest"}, "maps.models.BinaryRandomForest.predict": {"fullname": "maps.models.BinaryRandomForest.predict", "modulename": "maps.models", "qualname": "BinaryRandomForest.predict", "kind": "function", "doc": "<p>Generate binary class predictions.</p>\n\n<p>Args:\n    x (pl.DataFrame): Feature matrix with ID column.\n    id_test (list, optional): IDs of test samples. Defaults to None.</p>\n\n<p>Returns:\n    pl.DataFrame: Predictions with ID and Ypred columns.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">id_test</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.models.MultiAntibody": {"fullname": "maps.models.MultiAntibody", "modulename": "maps.models", "qualname": "MultiAntibody", "kind": "class", "doc": "<p>Multi-modal transformer model for multi-antibody imaging data.</p>\n\n<p>This model processes data from multiple antibody stains using a transformer-based\narchitecture. It requires a specialized DataLoader that provides batched multi-modal\ndata.</p>\n\n<p>Attributes:\n    model (MultiAntibodyClassifier): The underlying PyTorch model.\n    fitted (bool): Whether the model has been fitted.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>model = MultiAntibody(model={\"MultiAntibody\": {\n          ...     \"model\": {\"n_classes\": 2, \"d_model\": 16, \"n_layers\": 1},\n          ...     \"train\": {\"n_epochs\": 100}\n          ... }})\n      model.fit(data_loader=train_loader)\n      predictions = model.predict(data_loader=test_loader)</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "bases": "PyTorchModel"}, "maps.models.MultiAntibody.__init__": {"fullname": "maps.models.MultiAntibody.__init__", "modulename": "maps.models", "qualname": "MultiAntibody.__init__", "kind": "function", "doc": "<p>Initialize a MultiAntibody model.</p>\n\n<p>Args:\n    **kwargs: Model parameters. Should include a 'model' dict with 'MultiAntibody'\n        key containing 'model' (ModelConfig params) and 'train' (TrainConfig params).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "maps.models.MultiAntibody.model": {"fullname": "maps.models.MultiAntibody.model", "modulename": "maps.models", "qualname": "MultiAntibody.model", "kind": "variable", "doc": "<p></p>\n"}, "maps.models.MultiAntibody.fitted": {"fullname": "maps.models.MultiAntibody.fitted", "modulename": "maps.models", "qualname": "MultiAntibody.fitted", "kind": "variable", "doc": "<p></p>\n"}, "maps.models.MultiAntibody.fit": {"fullname": "maps.models.MultiAntibody.fit", "modulename": "maps.models", "qualname": "MultiAntibody.fit", "kind": "function", "doc": "<p>Fit the multi-antibody model.</p>\n\n<p>Args:\n    data_loader: DataLoader providing multi-modal batched data. Must implement\n        _get_feature_dims() method to determine input dimensions.</p>\n\n<p>Raises:\n    ValueError: If data_loader is None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data_loader</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.models.MultiAntibody.predict": {"fullname": "maps.models.MultiAntibody.predict", "modulename": "maps.models", "qualname": "MultiAntibody.predict", "kind": "function", "doc": "<p>Generate probability predictions for multi-antibody data.</p>\n\n<p>Args:\n    data_loader: DataLoader providing multi-modal batched test data.</p>\n\n<p>Returns:\n    pl.DataFrame: Predictions with columns for each class probability (Class_0,\n        Class_1, etc.), CellLines, and True labels.</p>\n\n<p>Raises:\n    AssertionError: If model has not been fitted or model is None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data_loader</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.loaders": {"fullname": "maps.loaders", "modulename": "maps.loaders", "kind": "module", "doc": "<p>Loaders provide classes for handling data input from different modalities. Every loader must define the methods load_data and load_metadata, which return polars dataframes containing the data and metadata, respectively. Both the <code>data</code> and <code>metdata</code> should include ID columns that uniquely define each row of metadata. </p>\n\n<p><strong>Note</strong> that the <code>data</code> dataframe may include multiple rows with the same ID \nvalue (e.g., when data rows are single cells and metdata correspond to imaging \nwells).</p>\n\n<p><strong>Note</strong> that loaders will read in the full dataset and write out feather files the first time a screen is processeed. This takes some time, but subsequent runs will be much faster as the data is read from feather files. Setting params <code>save_feather</code> = False will skip this step and read data directly from csv files.</p>\n"}, "maps.loaders.OperettaLoader": {"fullname": "maps.loaders.OperettaLoader", "modulename": "maps.loaders", "qualname": "OperettaLoader", "kind": "class", "doc": "<p>Loader for Operetta High-Content Imaging System data.</p>\n\n<p>Handles loading of single-cell imaging data and plate metadata from Operetta\nimaging screens. Supports caching via feather files for faster subsequent loads.\nData is organized by plates, with each plate containing an evaluation directory\nwith imaging features and a platemap with well metadata.</p>\n\n<p>Attributes:\n    - <code>params</code> (dict): Parameter dictionary from json config file\n    - <code>project_dir</code> (List[Path]): List of paths to screen directories\n    - <code>loader</code> (OperettaLoader): Loader instance for data I/O</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;root&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;/data/Experiments&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;screen&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;screen_001&quot;</span><span class=\"p\">}</span>\n<span class=\"n\">loader</span> <span class=\"o\">=</span> <span class=\"n\">OperettaLoader</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n<span class=\"n\">metadata</span><span class=\"p\">,</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">loader</span><span class=\"o\">.</span><span class=\"n\">load_data</span><span class=\"p\">(</span><span class=\"n\">antibody</span><span class=\"o\">=</span><span class=\"s2\">&quot;FUS/EEA1&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n</code></pre>\n"}, "maps.loaders.OperettaLoader.__init__": {"fullname": "maps.loaders.OperettaLoader.__init__", "modulename": "maps.loaders", "qualname": "OperettaLoader.__init__", "kind": "function", "doc": "<p>Initialize OperettaLoader with parameters.</p>\n\n<p>Args:\n    params (dict): Configuration dictionary containing:\n        - <code>root</code> (str): Root directory path\n        - <code>screen</code> (str or List[str]): Screen identifier(s)\n        - <code>eval_dir</code> (str, optional): Evaluation subdirectory. Defaults to \"Evaluation1\"\n        - <code>data_file</code> (str, optional): Data filename. Defaults to \"Objects_Population - Nuclei Selected.txt\"\n        - <code>save_feather</code> (bool, optional): Whether to cache feather files. Defaults to True</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span>)</span>"}, "maps.loaders.OperettaLoader.params": {"fullname": "maps.loaders.OperettaLoader.params", "modulename": "maps.loaders", "qualname": "OperettaLoader.params", "kind": "variable", "doc": "<p></p>\n"}, "maps.loaders.OperettaLoader.load_metadata": {"fullname": "maps.loaders.OperettaLoader.load_metadata", "modulename": "maps.loaders", "qualname": "OperettaLoader.load_metadata", "kind": "function", "doc": "<p>Load platemap metadata for a selected plate.</p>\n\n<p>Reads platemap CSV file containing well-level metadata (cell lines,\ndrugs, antibodies, etc.) and standardizes column names and identifiers.</p>\n\n<p>Args:\n    plate_dir (str): Path to plate directory.</p>\n\n<p>Returns:\n    pl.DataFrame: Metadata DataFrame with columns including Row, Column,\n        Well, CellLines, Drugs, Antibody, Channel, ID, PlateID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">plate_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">polars</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "maps.loaders.OperettaLoader.load_data": {"fullname": "maps.loaders.OperettaLoader.load_data", "modulename": "maps.loaders", "qualname": "OperettaLoader.load_data", "kind": "function", "doc": "<p>Load data and metadata for selected antibody(ies).</p>\n\n<p>Loads all plates matching the specified antibody pattern, concatenates\ndata across plates, and filters to wells with data. Automatically counts\ncells per well and adds screen information.</p>\n\n<p>Args:\n    antibody (str or List[str], optional): Antibody name(s) to filter.\n        Can be a single antibody string or list of antibodies. Must be\n        specified either here or in params.</p>\n\n<p>Returns:\n    Tuple[pl.DataFrame, pl.DataFrame]: Tuple of (metadata, data) where:\n        - metadata: Well-level metadata with ID, NCells, Screen columns\n        - data: Single-cell measurements with ID column for joining</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">antibody</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">polars</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">polars</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "maps.loaders.OperettaLoader.list_antibodies": {"fullname": "maps.loaders.OperettaLoader.list_antibodies", "modulename": "maps.loaders", "qualname": "OperettaLoader.list_antibodies", "kind": "function", "doc": "<p>List unique antibodies available in the screen(s).</p>\n\n<p>Args:\n    plate_ids (List[str], optional): Plate IDs to filter. If None,\n        searches all plates in the screen.</p>\n\n<p>Returns:\n    pl.Series: Unique antibody names found in the specified plates.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">plate_ids</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">polars</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span>:</span></span>", "funcdef": "def"}, "maps.fitters": {"fullname": "maps.fitters", "modulename": "maps.fitters", "kind": "module", "doc": "<p>Fitter functions are used to run classification pipelines used for MAP-scoring analysis. Fitters define data splits, how model(s) should be trained relative to these sample splits, how predictions should be generated relative to these splits.</p>\n\n<p>All fitter functions operate on a <code>Screen</code> and <code>BaseModel</code> object. Some fitter functions additionally specify holdout cell lines\u2014i.e., those that should be removed during training and only evaluated as model predictions.</p>\n\n<p>Fitters return dictionaries containing the following keys: <code>fitted</code>: list of fitted models, <code>predicted</code>: DataFrame of predictions, <code>importance</code>: DataFrame of feature importances</p>\n\n<p><code>*_mut</code> fitters are wrappers that run an analysis for each mutational \nbackground. As a result, they return one dict per mutational background.</p>\n"}, "maps.fitters.leave_one_out_mut": {"fullname": "maps.fitters.leave_one_out_mut", "modulename": "maps.fitters", "qualname": "leave_one_out_mut", "kind": "function", "doc": "<p>Wrapper for running leave-one-out fitter by mutational background.</p>\n\n<p>Binary classifiers for <mutation> vs WT will be run for all ALS mutational \nbackgrounds, excluding sporadics. Each mutation is trained separately using\nleave-one-out cross-validation on cell lines.</p>\n\n<p>Args:\n    screen (ScreenBase): Screen object containing data and metadata.\n    model (BaseModel): Model instance (SKLearnModel or PyTorchModel).</p>\n\n<p>Returns:\n    Dict[str, Dict]: Dictionary keyed by mutation name, each containing:\n        - <code>fitted</code> (list): List of fitted models\n        - <code>predicted</code> (pl.DataFrame): Predictions with metadata\n        - <code>importance</code> (pd.DataFrame or None): Feature importances\n        - Additional keys depending on model type</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">screen</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>, </span><span class=\"param\"><span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BaseModel</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "maps.fitters.leave_one_out": {"fullname": "maps.fitters.leave_one_out", "modulename": "maps.fitters", "qualname": "leave_one_out", "kind": "function", "doc": "<p>Wrapper for leave-one-out cross-validation.</p>\n\n<p>Dispatches to sklearn or pytorch implementation based on model type. Leaves\none cell line out at a time, trains on remaining cell lines, and predicts\non the held-out cell line plus any additional holdout cell lines specified.</p>\n\n<p>Args:\n    screen (ScreenBase): Screen object containing data and metadata.\n    model (BaseModel): Model instance (SKLearnModel or PyTorchModel).\n    holdout (List[str], optional): Additional cell lines to hold out from \n        training. Defaults to [].</p>\n\n<p>Returns:\n    Dict: Dictionary containing:\n        - <code>fitted</code> (list): List of fitted models (one per cell line)\n        - <code>predicted</code> (pl.DataFrame): Predictions with metadata\n        - <code>importance</code> (pd.DataFrame or None): Feature importances\n        - Additional keys for PyTorch models (scalers, training_lines)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">screen</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BaseModel</span>,</span><span class=\"param\">\t<span class=\"n\">holdout</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "maps.fitters.leave_one_out_sklearn": {"fullname": "maps.fitters.leave_one_out_sklearn", "modulename": "maps.fitters", "qualname": "leave_one_out_sklearn", "kind": "function", "doc": "<p>Leave-one-out cross-validation for scikit-learn models.</p>\n\n<p>Iterates through each cell line, training on all other cell lines and \npredicting on the held-out cell line. Models are trained on well-averaged\nfeatures.</p>\n\n<p>Args:\n    screen (ScreenBase): Screen object with data and metadata.\n    model (BaseModel): SKLearnModel instance.\n    holdout (List[str], optional): Cell lines to exclude from training.\n        Defaults to [].</p>\n\n<p>Returns:\n    Dict: Dictionary containing:\n        - <code>fitted</code> (list): List of fitted model copies\n        - <code>predicted</code> (pl.DataFrame): Predictions joined with metadata\n        - <code>importance</code> (pd.DataFrame): Feature importances from each fold</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">screen</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BaseModel</span>,</span><span class=\"param\">\t<span class=\"n\">holdout</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "maps.fitters.leave_one_out_pytorch": {"fullname": "maps.fitters.leave_one_out_pytorch", "modulename": "maps.fitters", "qualname": "leave_one_out_pytorch", "kind": "function", "doc": "<p>Leave-one-cell-line-out classification for PyTorch models.</p>\n\n<p>Trains PyTorch models using DataLoader batching on single-cell data.\nEach iteration holds out one cell line for testing while training on all\nremaining cell lines.</p>\n\n<p>Args:\n    screen (ScreenBase): Screen object (ImageScreen or ImageScreenMultiAntibody).\n    model (BaseModel): PyTorchModel instance.\n    holdout (List[str], optional): Cell lines to exclude from training.\n        Defaults to [].</p>\n\n<p>Returns:\n    Dict: Dictionary containing:\n        - <code>fitted</code> (list): List of fitted model copies (moved to CPU)\n        - <code>predicted</code> (pl.DataFrame): Concatenated predictions\n        - <code>scalers</code> (list): Feature scalers for each fold\n        - <code>training_lines</code> (list): Cell lines used in training\n        - <code>importance</code> (None): Not implemented for PyTorch models</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">screen</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BaseModel</span>,</span><span class=\"param\">\t<span class=\"n\">holdout</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "maps.fitters.sample_split_mut": {"fullname": "maps.fitters.sample_split_mut", "modulename": "maps.fitters", "qualname": "sample_split_mut", "kind": "function", "doc": "<p>Wrapper for running sample_split fitter by mutational background.</p>\n\n<p>Binary classifiers for <mutation> vs WT will be run for all ALS mutational \nbackgrounds, excluding sporadics. For each mutation, performs a 50/50 sample\nsplit with reciprocal training and prediction.</p>\n\n<p>Args:\n    screen (ScreenBase): Screen object containing data and metadata.\n    model (BaseModel): Model instance (SKLearnModel or PyTorchModel).</p>\n\n<p>Returns:\n    Dict[str, Dict]: Dictionary keyed by mutation name, each containing:\n        - <code>fitted</code> (list): List of fitted models (2 per mutation)\n        - <code>predicted</code> (pl.DataFrame): Predictions with metadata\n        - <code>training_lines</code> (list): Cell lines in each training split\n        - Additional keys depending on model type</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">screen</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>, </span><span class=\"param\"><span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BaseModel</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "maps.fitters.sample_split": {"fullname": "maps.fitters.sample_split", "modulename": "maps.fitters", "qualname": "sample_split", "kind": "function", "doc": "<p>Wrapper for sample split cross-validation with hold-out cell lines.</p>\n\n<p>Splits cell lines 50/50, trains two models reciprocally (each on one split,\npredicting on the other), and combines predictions. Supports multiple \nreplicates via params configuration.</p>\n\n<p>Args:\n    screen (ScreenBase): Screen object with data and metadata.\n    model (BaseModel): Model instance (SKLearnModel or PyTorchModel).\n    holdout (List[str], optional): Cell lines to exclude from training.\n        Defaults to [].\n    seed (int, optional): Random seed for reproducibility. Defaults to 47.</p>\n\n<p>Returns:\n    Dict: Dictionary containing:\n        - <code>fitted</code> (list): List of all fitted models from all replicates\n        - <code>predicted</code> (pl.DataFrame): Concatenated predictions from replicates\n        - <code>training_lines</code> (list): Cell lines in each training split\n        - Additional keys depending on model type</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">screen</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BaseModel</span>,</span><span class=\"param\">\t<span class=\"n\">holdout</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">seed</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">47</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "maps.fitters.sample_split_pytorch": {"fullname": "maps.fitters.sample_split_pytorch", "modulename": "maps.fitters", "qualname": "sample_split_pytorch", "kind": "function", "doc": "<p>Sample split cross-validation for PyTorch models.</p>\n\n<p>Performs 50/50 cell line split with reciprocal training using DataLoader\nbatching on single-cell data. Each model is trained on one split and \npredicts on the complementary split plus holdout cell lines.</p>\n\n<p>Args:\n    screen (ScreenBase): Screen object (ImageScreen or ImageScreenMultiAntibody).\n    model (BaseModel): PyTorchModel instance.\n    holdout (List[str], optional): Cell lines to exclude from training.\n        Defaults to [].\n    seed (int, optional): Random seed for split generation. Defaults to 47.</p>\n\n<p>Returns:\n    Dict: Dictionary containing:\n        - <code>fitted</code> (list): Two fitted models (moved to CPU)\n        - <code>predicted</code> (pl.DataFrame): Concatenated predictions\n        - <code>training_lines</code> (list): Cell lines in each training split (2 lists)\n        - <code>scalers</code> (list): Feature scalers for each split (2 scalers)\n        - <code>importance</code> (None): Not implemented for PyTorch models</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">screen</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BaseModel</span>,</span><span class=\"param\">\t<span class=\"n\">holdout</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">seed</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">47</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "maps.fitters.sample_split_sklearn": {"fullname": "maps.fitters.sample_split_sklearn", "modulename": "maps.fitters", "qualname": "sample_split_sklearn", "kind": "function", "doc": "<p>Sample split cross-validation for sklearn models.</p>\n\n<p>Performs 50/50 cell line split with reciprocal training on well-averaged\nfeatures. Each model is trained on one split and predicts on the \ncomplementary split. Predictions are centered around 0.5.</p>\n\n<p>Args:\n    screen (ScreenBase): Screen object with data and metadata.\n    model (BaseModel): SKLearnModel instance.\n    holdout (List[str], optional): Cell lines to exclude from training.\n        Defaults to [].\n    seed (int, optional): Random seed for split generation. Defaults to 47.</p>\n\n<p>Returns:\n    Dict: Dictionary containing:\n        - <code>fitted</code> (list): Two fitted models\n        - <code>predicted</code> (pl.DataFrame): Predictions joined with metadata, centered\n        - <code>importance</code> (pd.Series or None): Average feature importances</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">screen</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BaseModel</span>,</span><span class=\"param\">\t<span class=\"n\">holdout</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">seed</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">47</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "maps.analyses": {"fullname": "maps.analyses", "modulename": "maps.analyses", "kind": "module", "doc": "<p>Analysis classes define specific analysis modules. Parameters for analysis modules should be defined under the <code>analysis</code> key of your params.json file\u2014with one entry for each type of analysis to be performed.</p>\n\n<p>Analysis modules output a dictionary of figures and tables\u2014the specific figure and table generated are defined within the analysis module. The <code>run</code> method in each analysis module calls all functions necessary to generate the desired output.</p>\n"}, "maps.analyses.PCA": {"fullname": "maps.analyses.PCA", "modulename": "maps.analyses", "qualname": "PCA", "kind": "class", "doc": "<p>Principal Component Analysis for dimensionality reduction.</p>\n\n<p>Performs PCA on molecular profiles (imaging features) aggregated by well\nor other grouping. Useful for exploratory data analysis and visualization\nof high-dimensional data.</p>\n\n<p>Attributes:\n    - <code>screen</code> (ScreenBase): Screen object containing data\n    - <code>fitted</code> (pl.DataFrame): PCA-transformed data with principal components\n    - <code>is_fitted</code> (bool): Whether PCA has been fitted</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">pca</span> <span class=\"o\">=</span> <span class=\"n\">PCA</span><span class=\"p\">(</span><span class=\"n\">screen</span><span class=\"p\">)</span>\n<span class=\"n\">pca</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">()</span>\n<span class=\"c1\"># Access results</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pca</span><span class=\"o\">.</span><span class=\"n\">fitted</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n</code></pre>\n"}, "maps.analyses.PCA.__init__": {"fullname": "maps.analyses.PCA.__init__", "modulename": "maps.analyses", "qualname": "PCA.__init__", "kind": "function", "doc": "<p>Initialize PCA analysis.</p>\n\n<p>Args:\n    screen (ScreenBase): Screen object with loaded and preprocessed data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">screen</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span></span>)</span>"}, "maps.analyses.PCA.screen": {"fullname": "maps.analyses.PCA.screen", "modulename": "maps.analyses", "qualname": "PCA.screen", "kind": "variable", "doc": "<p></p>\n"}, "maps.analyses.PCA.run": {"fullname": "maps.analyses.PCA.run", "modulename": "maps.analyses", "qualname": "PCA.run", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.analyses.PCA.fit": {"fullname": "maps.analyses.PCA.fit", "modulename": "maps.analyses", "qualname": "PCA.fit", "kind": "function", "doc": "<p>Run PCA on screen data aggregated by specified grouping.</p>\n\n<p>Features are standardized before PCA. Data is first aggregated by the\nspecified grouping variable(s), then PCA is performed on the aggregated\nfeatures.</p>\n\n<p>Args:\n    group (str or List[str], optional): Column(s) to group by before PCA.\n        Defaults to \"ID\" (well-level aggregation). Can be \"ID\" and another\n        column for hierarchical grouping.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">group</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ID&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.analyses.MAP": {"fullname": "maps.analyses.MAP", "modulename": "maps.analyses", "qualname": "MAP", "kind": "class", "doc": "<p>Molecular ALS Phenotype (MAP) scoring analysis.</p>\n\n<p>Trains classification models to generate MAP scores (predicted probabilities)\nfor distinguishing ALS genetic backgrounds from healthy controls. Scores are\ncomputed on held-out samples using cross-validation strategies defined by\nfitters.</p>\n\n<p>Attributes:\n    - <code>screen</code> (ScreenBase): Screen object containing data\n    - <code>params</code> (dict): MAP analysis parameters from config\n    - <code>model</code> (BaseModel): Model instance for classification\n    - <code>fitter</code> (str): Name of fitter function to use\n    - <code>fitted</code> (Dict): Results dictionary from fitter containing predictions,\n        fitted models, and importances\n    - <code>is_fitted</code> (bool): Whether analysis has been fitted</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Parameters should define model and fitter in config</span>\n<span class=\"n\">map_analysis</span> <span class=\"o\">=</span> <span class=\"n\">MAP</span><span class=\"p\">(</span><span class=\"n\">screen</span><span class=\"p\">)</span>\n<span class=\"n\">map_analysis</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">()</span>\n<span class=\"c1\"># Access predictions</span>\n<span class=\"n\">predictions</span> <span class=\"o\">=</span> <span class=\"n\">map_analysis</span><span class=\"o\">.</span><span class=\"n\">fitted</span><span class=\"p\">[</span><span class=\"s2\">&quot;predicted&quot;</span><span class=\"p\">]</span>\n</code></pre>\n</div>\n</code></pre>\n"}, "maps.analyses.MAP.__init__": {"fullname": "maps.analyses.MAP.__init__", "modulename": "maps.analyses", "qualname": "MAP.__init__", "kind": "function", "doc": "<p>Initialize MAP analysis from screen parameters.</p>\n\n<p>Args:\n    screen (ScreenBase): Screen object with params containing MAP\n        configuration under params[\"analysis\"][\"MAP\"].</p>\n\n<p>Raises:\n    AssertionError: If MAP key not found in analysis parameters.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">screen</span><span class=\"p\">:</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">screens</span><span class=\"o\">.</span><span class=\"n\">ScreenBase</span></span>)</span>"}, "maps.analyses.MAP.params": {"fullname": "maps.analyses.MAP.params", "modulename": "maps.analyses", "qualname": "MAP.params", "kind": "variable", "doc": "<p></p>\n"}, "maps.analyses.MAP.model": {"fullname": "maps.analyses.MAP.model", "modulename": "maps.analyses", "qualname": "MAP.model", "kind": "variable", "doc": "<p></p>\n"}, "maps.analyses.MAP.fitter": {"fullname": "maps.analyses.MAP.fitter", "modulename": "maps.analyses", "qualname": "MAP.fitter", "kind": "variable", "doc": "<p></p>\n"}, "maps.analyses.MAP.is_fitted": {"fullname": "maps.analyses.MAP.is_fitted", "modulename": "maps.analyses", "qualname": "MAP.is_fitted", "kind": "variable", "doc": "<p></p>\n"}, "maps.analyses.MAP.run": {"fullname": "maps.analyses.MAP.run", "modulename": "maps.analyses", "qualname": "MAP.run", "kind": "function", "doc": "<p>Run complete MAP scoring workflow.</p>\n\n<p>Fits models using specified fitter and stores results in outputs\ndictionary.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.analyses.MAP.fit": {"fullname": "maps.analyses.MAP.fit", "modulename": "maps.analyses", "qualname": "MAP.fit", "kind": "function", "doc": "<p>Fit classification models using specified fitter.</p>\n\n<p>Calls the fitter function specified in params (e.g., leave_one_out,\nsample_split) to train models and generate predictions on held-out data.\nResults are stored in self.fitted.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "maps.analyses.MAP.make_table": {"fullname": "maps.analyses.MAP.make_table", "modulename": "maps.analyses", "qualname": "MAP.make_table", "kind": "function", "doc": "<p>Generate standard MAP score table.</p>\n\n<p>Returns single-cell predictions with metadata joined.</p>\n\n<p>Returns:\n    pl.DataFrame: DataFrame with columns including ID, Ypred (MAP scores),\n        and metadata columns (CellLines, Mutations, etc.).</p>\n\n<p>Raises:\n    AssertionError: If fit() has not been called.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">polars</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"maps.screens": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 52}, "maps.screens.ScreenBase": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 109}, "maps.screens.ScreenBase.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 26}, "maps.screens.ScreenBase.params": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.screens.ScreenBase.loader": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.screens.ScreenBase.data": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.screens.ScreenBase.metadata": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.screens.ScreenBase.get_response": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 58}, "maps.screens.ScreenBase.get_data": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 16}, "maps.screens.ScreenBase.preprocess": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 33}, "maps.screens.ImageScreen": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 139}, "maps.screens.ImageScreen.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 17}, "maps.screens.ImageScreen.preprocessed": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.screens.ImageScreen.loaded": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.screens.ImageScreen.load": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 48}, "maps.screens.ImageScreenMultiAntibody": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 121}, "maps.screens.ImageScreenMultiAntibody.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 17}, "maps.screens.ImageScreenMultiAntibody.preprocessed": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.screens.ImageScreenMultiAntibody.load": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 69}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 30}, "maps.screens.ImageScreenMultiAntibody.get_response": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 97}, "maps.processing": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 42}, "maps.processing.drop_na_features": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 138}, "maps.processing.drop_constant_features": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 52}, "maps.processing.select_feature_types": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 190}, "maps.processing.drop_feature_types": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 184}, "maps.processing.select_sample_by_feature": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 212}, "maps.processing.drop_sample_by_feature": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 215}, "maps.processing.drop_cells_by_count": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 173}, "maps.processing.drop_cells_by_feature_qt": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 203}, "maps.processing.subsample_rows_by_id": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 161}, "maps.processing.pca_transform": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 196}, "maps.processing.group_markers": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 173}, "maps.processing.standardize_features": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 98}, "maps.models": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 80}, "maps.models.DEFAULT_SEED": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "maps.models.BaseModel": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 90}, "maps.models.BaseModel.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 18}, "maps.models.BaseModel.params": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.models.BaseModel.model": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.models.BaseModel.fitted": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.models.BaseModel.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 73}, "maps.models.BaseModel.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 81}, "maps.models.BaseModel.get_importance": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 57}, "maps.models.SKLearnModel": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 24}, "maps.models.SKLearnModel.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 18}, "maps.models.SKLearnModel.model_type": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.models.PyTorchModel": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 23}, "maps.models.PyTorchModel.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 18}, "maps.models.PyTorchModel.params": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.models.PyTorchModel.model_type": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.models.Logistic": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 105}, "maps.models.Logistic.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 28}, "maps.models.Logistic.scaler": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.models.Logistic.model": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.models.Logistic.fitted": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.models.Logistic.scaled": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.models.Logistic.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 46}, "maps.models.Logistic.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 68}, "maps.models.Logistic.get_importance": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 57}, "maps.models.BinaryLogistic": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 68}, "maps.models.BinaryLogistic.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 47}, "maps.models.RandomForest": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 86}, "maps.models.RandomForest.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 28}, "maps.models.RandomForest.model": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.models.RandomForest.fitted": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.models.RandomForest.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 46}, "maps.models.RandomForest.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 61}, "maps.models.RandomForest.get_importance": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 49}, "maps.models.BinaryRandomForest": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 60}, "maps.models.BinaryRandomForest.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 44}, "maps.models.MultiAntibody": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 120}, "maps.models.MultiAntibody.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 30}, "maps.models.MultiAntibody.model": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.models.MultiAntibody.fitted": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.models.MultiAntibody.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 40}, "maps.models.MultiAntibody.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 60}, "maps.loaders": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 152}, "maps.loaders.OperettaLoader": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 217}, "maps.loaders.OperettaLoader.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 77}, "maps.loaders.OperettaLoader.params": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.loaders.OperettaLoader.load_metadata": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 64}, "maps.loaders.OperettaLoader.load_data": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 97, "bases": 0, "doc": 104}, "maps.loaders.OperettaLoader.list_antibodies": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 46}, "maps.fitters": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 136}, "maps.fitters.leave_one_out_mut": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 114}, "maps.fitters.leave_one_out": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 134}, "maps.fitters.leave_one_out_sklearn": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 109}, "maps.fitters.leave_one_out_pytorch": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 129}, "maps.fitters.sample_split_mut": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 117}, "maps.fitters.sample_split": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 134}, "maps.fitters.sample_split_pytorch": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 148}, "maps.fitters.sample_split_sklearn": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 123}, "maps.analyses": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 78}, "maps.analyses.PCA": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 140}, "maps.analyses.PCA.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 20}, "maps.analyses.PCA.screen": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.analyses.PCA.run": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "maps.analyses.PCA.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 70}, "maps.analyses.MAP": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 203}, "maps.analyses.MAP.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 42}, "maps.analyses.MAP.params": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.analyses.MAP.model": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.analyses.MAP.fitter": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.analyses.MAP.is_fitted": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "maps.analyses.MAP.run": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 22}, "maps.analyses.MAP.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 42}, "maps.analyses.MAP.make_table": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 49}}, "length": 108, "save": true}, "index": {"qualname": {"root": {"docs": {"maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 12, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"maps.analyses.PCA.screen": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ScreenBase.params": {"tf": 1}, "maps.screens.ScreenBase.loader": {"tf": 1}, "maps.screens.ScreenBase.data": {"tf": 1}, "maps.screens.ScreenBase.metadata": {"tf": 1}, "maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ScreenBase.get_data": {"tf": 1}, "maps.screens.ScreenBase.preprocess": {"tf": 1}}, "df": 9}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.models.Logistic.scaler": {"tf": 1}}, "df": 1}, "d": {"docs": {"maps.models.Logistic.scaled": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.models.DEFAULT_SEED": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 6}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.standardize_features": {"tf": 1}}, "df": 1}}}}}}}}}}, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.models.SKLearnModel": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.model_type": {"tf": 1}}, "df": 3}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 12}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreen.preprocessed": {"tf": 1}, "maps.screens.ImageScreen.loaded": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1}}, "df": 5, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocessed": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}}, "df": 3}}}}}}}}}, "d": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}}, "df": 1}, "s": {"docs": {"maps.analyses.MAP.is_fitted": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ScreenBase.params": {"tf": 1}, "maps.models.BaseModel.params": {"tf": 1}, "maps.models.PyTorchModel.params": {"tf": 1}, "maps.loaders.OperettaLoader.params": {"tf": 1}, "maps.analyses.MAP.params": {"tf": 1}}, "df": 5}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.screens.ImageScreen.preprocessed": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocessed": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}}, "df": 6}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"maps.processing.pca_transform": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.PCA.screen": {"tf": 1}, "maps.analyses.PCA.run": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 6}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.models.PyTorchModel": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.params": {"tf": 1}, "maps.models.PyTorchModel.model_type": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.screens.ScreenBase.loader": {"tf": 1}}, "df": 1}, "d": {"docs": {"maps.screens.ImageScreen.loaded": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"maps.models.Logistic": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.Logistic.scaler": {"tf": 1}, "maps.models.Logistic.model": {"tf": 1}, "maps.models.Logistic.fitted": {"tf": 1}, "maps.models.Logistic.scaled": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}}, "df": 9}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}}, "df": 4}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"maps.screens.ScreenBase.data": {"tf": 1}, "maps.screens.ScreenBase.get_data": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.DEFAULT_SEED": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"maps.screens.ScreenBase.metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.group_markers": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}, "maps.analyses.MAP.params": {"tf": 1}, "maps.analyses.MAP.model": {"tf": 1}, "maps.analyses.MAP.fitter": {"tf": 1}, "maps.analyses.MAP.is_fitted": {"tf": 1}, "maps.analyses.MAP.run": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 9}, "k": {"docs": {}, "df": 0, "e": {"docs": {"maps.analyses.MAP.make_table": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.models.BaseModel.model": {"tf": 1}, "maps.models.SKLearnModel.model_type": {"tf": 1}, "maps.models.PyTorchModel.model_type": {"tf": 1}, "maps.models.Logistic.model": {"tf": 1}, "maps.models.RandomForest.model": {"tf": 1}, "maps.models.MultiAntibody.model": {"tf": 1}, "maps.analyses.MAP.model": {"tf": 1}}, "df": 7}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"maps.models.MultiAntibody": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.models.MultiAntibody.model": {"tf": 1}, "maps.models.MultiAntibody.fitted": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}}, "df": 6}}}}}}}}}}}, "t": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ScreenBase.get_data": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"maps.processing.group_markers": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.RandomForest": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.RandomForest.model": {"tf": 1}, "maps.models.RandomForest.fitted": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}}, "df": 7}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"maps.analyses.PCA.run": {"tf": 1}, "maps.analyses.MAP.run": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {"maps.processing.drop_na_features": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 5, "s": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.BaseModel.fit": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.models.BaseModel.fitted": {"tf": 1}, "maps.models.Logistic.fitted": {"tf": 1}, "maps.models.RandomForest.fitted": {"tf": 1}, "maps.models.MultiAntibody.fitted": {"tf": 1}, "maps.analyses.MAP.is_fitted": {"tf": 1}}, "df": 5}, "r": {"docs": {"maps.analyses.MAP.fitter": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.drop_constant_features": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"maps.models.SKLearnModel.model_type": {"tf": 1}, "maps.models.PyTorchModel.model_type": {"tf": 1}}, "df": 2, "s": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.analyses.MAP.make_table": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}}, "df": 5}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.BaseModel.params": {"tf": 1}, "maps.models.BaseModel.model": {"tf": 1}, "maps.models.BaseModel.fitted": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}}, "df": 8}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"maps.models.BinaryLogistic": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.BinaryRandomForest": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.params": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 6}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "fullname": {"root": {"docs": {"maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 12, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}, "maps.analyses.MAP.params": {"tf": 1}, "maps.analyses.MAP.model": {"tf": 1}, "maps.analyses.MAP.fitter": {"tf": 1}, "maps.analyses.MAP.is_fitted": {"tf": 1}, "maps.analyses.MAP.run": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 9, "s": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ScreenBase": {"tf": 1}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ScreenBase.params": {"tf": 1}, "maps.screens.ScreenBase.loader": {"tf": 1}, "maps.screens.ScreenBase.data": {"tf": 1}, "maps.screens.ScreenBase.metadata": {"tf": 1}, "maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ScreenBase.get_data": {"tf": 1}, "maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreen.preprocessed": {"tf": 1}, "maps.screens.ImageScreen.loaded": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocessed": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing": {"tf": 1}, "maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}, "maps.models": {"tf": 1}, "maps.models.DEFAULT_SEED": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.BaseModel.params": {"tf": 1}, "maps.models.BaseModel.model": {"tf": 1}, "maps.models.BaseModel.fitted": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.SKLearnModel": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.model_type": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.params": {"tf": 1}, "maps.models.PyTorchModel.model_type": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.Logistic.scaler": {"tf": 1}, "maps.models.Logistic.model": {"tf": 1}, "maps.models.Logistic.fitted": {"tf": 1}, "maps.models.Logistic.scaled": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.RandomForest.model": {"tf": 1}, "maps.models.RandomForest.fitted": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.models.MultiAntibody.model": {"tf": 1}, "maps.models.MultiAntibody.fitted": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.params": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.PCA.screen": {"tf": 1}, "maps.analyses.PCA.run": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}, "maps.analyses.MAP.params": {"tf": 1}, "maps.analyses.MAP.model": {"tf": 1}, "maps.analyses.MAP.fitter": {"tf": 1}, "maps.analyses.MAP.is_fitted": {"tf": 1}, "maps.analyses.MAP.run": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 108}}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.group_markers": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"maps.analyses.MAP.make_table": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"maps.screens.ScreenBase.metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.models.BaseModel.model": {"tf": 1}, "maps.models.SKLearnModel.model_type": {"tf": 1}, "maps.models.PyTorchModel.model_type": {"tf": 1}, "maps.models.Logistic.model": {"tf": 1}, "maps.models.RandomForest.model": {"tf": 1}, "maps.models.MultiAntibody.model": {"tf": 1}, "maps.analyses.MAP.model": {"tf": 1}}, "df": 7, "s": {"docs": {"maps.models": {"tf": 1}, "maps.models.DEFAULT_SEED": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.BaseModel.params": {"tf": 1}, "maps.models.BaseModel.model": {"tf": 1}, "maps.models.BaseModel.fitted": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.SKLearnModel": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.model_type": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.params": {"tf": 1}, "maps.models.PyTorchModel.model_type": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.Logistic.scaler": {"tf": 1}, "maps.models.Logistic.model": {"tf": 1}, "maps.models.Logistic.fitted": {"tf": 1}, "maps.models.Logistic.scaled": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.RandomForest.model": {"tf": 1}, "maps.models.RandomForest.fitted": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.models.MultiAntibody.model": {"tf": 1}, "maps.models.MultiAntibody.fitted": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}}, "df": 43}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"maps.models.MultiAntibody": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.models.MultiAntibody.model": {"tf": 1}, "maps.models.MultiAntibody.fitted": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}}, "df": 6}}}}}}}}}}}, "t": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"maps.analyses.PCA.screen": {"tf": 1}}, "df": 1, "s": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ScreenBase": {"tf": 1}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ScreenBase.params": {"tf": 1}, "maps.screens.ScreenBase.loader": {"tf": 1}, "maps.screens.ScreenBase.data": {"tf": 1}, "maps.screens.ScreenBase.metadata": {"tf": 1}, "maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ScreenBase.get_data": {"tf": 1}, "maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreen.preprocessed": {"tf": 1}, "maps.screens.ImageScreen.loaded": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocessed": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}}, "df": 21}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ScreenBase.params": {"tf": 1}, "maps.screens.ScreenBase.loader": {"tf": 1}, "maps.screens.ScreenBase.data": {"tf": 1}, "maps.screens.ScreenBase.metadata": {"tf": 1}, "maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ScreenBase.get_data": {"tf": 1}, "maps.screens.ScreenBase.preprocess": {"tf": 1}}, "df": 9}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.models.Logistic.scaler": {"tf": 1}}, "df": 1}, "d": {"docs": {"maps.models.Logistic.scaled": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.models.DEFAULT_SEED": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 6}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.standardize_features": {"tf": 1}}, "df": 1}}}}}}}}}}, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.models.SKLearnModel": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.model_type": {"tf": 1}}, "df": 3}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 12}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreen.preprocessed": {"tf": 1}, "maps.screens.ImageScreen.loaded": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1}}, "df": 5, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocessed": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}}, "df": 3}}}}}}}}}, "d": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}}, "df": 1}, "s": {"docs": {"maps.analyses.MAP.is_fitted": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ScreenBase.params": {"tf": 1}, "maps.models.BaseModel.params": {"tf": 1}, "maps.models.PyTorchModel.params": {"tf": 1}, "maps.loaders.OperettaLoader.params": {"tf": 1}, "maps.analyses.MAP.params": {"tf": 1}}, "df": 5}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.screens.ImageScreen.preprocessed": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocessed": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing": {"tf": 1}, "maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}}, "df": 13}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"maps.processing.pca_transform": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.PCA.screen": {"tf": 1}, "maps.analyses.PCA.run": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 6}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.models.PyTorchModel": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.params": {"tf": 1}, "maps.models.PyTorchModel.model_type": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.screens.ScreenBase.loader": {"tf": 1}}, "df": 1, "s": {"docs": {"maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.params": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 7}}, "d": {"docs": {"maps.screens.ImageScreen.loaded": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"maps.models.Logistic": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.Logistic.scaler": {"tf": 1}, "maps.models.Logistic.model": {"tf": 1}, "maps.models.Logistic.fitted": {"tf": 1}, "maps.models.Logistic.scaled": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}}, "df": 9}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}}, "df": 4}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"maps.screens.ScreenBase.data": {"tf": 1}, "maps.screens.ScreenBase.get_data": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.DEFAULT_SEED": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ScreenBase.get_data": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"maps.processing.group_markers": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.RandomForest": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.RandomForest.model": {"tf": 1}, "maps.models.RandomForest.fitted": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}}, "df": 7}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"maps.analyses.PCA.run": {"tf": 1}, "maps.analyses.MAP.run": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {"maps.processing.drop_na_features": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 5, "s": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.BaseModel.fit": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.models.BaseModel.fitted": {"tf": 1}, "maps.models.Logistic.fitted": {"tf": 1}, "maps.models.RandomForest.fitted": {"tf": 1}, "maps.models.MultiAntibody.fitted": {"tf": 1}, "maps.analyses.MAP.is_fitted": {"tf": 1}}, "df": 5}, "r": {"docs": {"maps.analyses.MAP.fitter": {"tf": 1}}, "df": 1, "s": {"docs": {"maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 9}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.drop_constant_features": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"maps.models.SKLearnModel.model_type": {"tf": 1}, "maps.models.PyTorchModel.model_type": {"tf": 1}}, "df": 2, "s": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.analyses.MAP.make_table": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}}, "df": 5}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.BaseModel.params": {"tf": 1}, "maps.models.BaseModel.model": {"tf": 1}, "maps.models.BaseModel.fitted": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}}, "df": 8}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"maps.models.BinaryLogistic": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.BinaryRandomForest": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.params": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 6}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.analyses": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.PCA.screen": {"tf": 1}, "maps.analyses.PCA.run": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}, "maps.analyses.MAP.params": {"tf": 1}, "maps.analyses.MAP.model": {"tf": 1}, "maps.analyses.MAP.fitter": {"tf": 1}, "maps.analyses.MAP.is_fitted": {"tf": 1}, "maps.analyses.MAP.run": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 15}}}}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"4": {"7": {"docs": {"maps.models.DEFAULT_SEED": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "signature": {"root": {"3": {"9": {"docs": {"maps.analyses.PCA.fit": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "4": {"7": {"docs": {"maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {"maps.screens.ScreenBase.__init__": {"tf": 3.4641016151377544}, "maps.screens.ScreenBase.get_response": {"tf": 4.242640687119285}, "maps.screens.ScreenBase.get_data": {"tf": 3.1622776601683795}, "maps.screens.ScreenBase.preprocess": {"tf": 3.1622776601683795}, "maps.screens.ImageScreen.__init__": {"tf": 2.8284271247461903}, "maps.screens.ImageScreen.load": {"tf": 4.242640687119285}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 2.8284271247461903}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 4.242640687119285}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 3.1622776601683795}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 4.242640687119285}, "maps.processing.drop_na_features": {"tf": 6.164414002968976}, "maps.processing.drop_constant_features": {"tf": 5.656854249492381}, "maps.processing.select_feature_types": {"tf": 6.164414002968976}, "maps.processing.drop_feature_types": {"tf": 6.164414002968976}, "maps.processing.select_sample_by_feature": {"tf": 6.164414002968976}, "maps.processing.drop_sample_by_feature": {"tf": 6.164414002968976}, "maps.processing.drop_cells_by_count": {"tf": 6.164414002968976}, "maps.processing.drop_cells_by_feature_qt": {"tf": 6.164414002968976}, "maps.processing.subsample_rows_by_id": {"tf": 6.164414002968976}, "maps.processing.pca_transform": {"tf": 6.164414002968976}, "maps.processing.group_markers": {"tf": 6.164414002968976}, "maps.processing.standardize_features": {"tf": 5.656854249492381}, "maps.models.BaseModel.__init__": {"tf": 3.1622776601683795}, "maps.models.BaseModel.fit": {"tf": 6.48074069840786}, "maps.models.BaseModel.predict": {"tf": 6.48074069840786}, "maps.models.BaseModel.get_importance": {"tf": 4.242640687119285}, "maps.models.SKLearnModel.__init__": {"tf": 3.1622776601683795}, "maps.models.PyTorchModel.__init__": {"tf": 3.1622776601683795}, "maps.models.Logistic.__init__": {"tf": 3.1622776601683795}, "maps.models.Logistic.fit": {"tf": 5.0990195135927845}, "maps.models.Logistic.predict": {"tf": 4.69041575982343}, "maps.models.Logistic.get_importance": {"tf": 5.477225575051661}, "maps.models.BinaryLogistic.predict": {"tf": 4.69041575982343}, "maps.models.RandomForest.__init__": {"tf": 3.1622776601683795}, "maps.models.RandomForest.fit": {"tf": 5.0990195135927845}, "maps.models.RandomForest.predict": {"tf": 4.69041575982343}, "maps.models.RandomForest.get_importance": {"tf": 5.477225575051661}, "maps.models.BinaryRandomForest.predict": {"tf": 4.69041575982343}, "maps.models.MultiAntibody.__init__": {"tf": 3.1622776601683795}, "maps.models.MultiAntibody.fit": {"tf": 3.7416573867739413}, "maps.models.MultiAntibody.predict": {"tf": 3.7416573867739413}, "maps.loaders.OperettaLoader.__init__": {"tf": 3.4641016151377544}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 5.656854249492381}, "maps.loaders.OperettaLoader.load_data": {"tf": 8.94427190999916}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 6.928203230275509}, "maps.fitters.leave_one_out_mut": {"tf": 6.324555320336759}, "maps.fitters.leave_one_out": {"tf": 7.615773105863909}, "maps.fitters.leave_one_out_sklearn": {"tf": 7.615773105863909}, "maps.fitters.leave_one_out_pytorch": {"tf": 7.615773105863909}, "maps.fitters.sample_split_mut": {"tf": 6.324555320336759}, "maps.fitters.sample_split": {"tf": 8.54400374531753}, "maps.fitters.sample_split_pytorch": {"tf": 8.54400374531753}, "maps.fitters.sample_split_sklearn": {"tf": 8.54400374531753}, "maps.analyses.PCA.__init__": {"tf": 4.47213595499958}, "maps.analyses.PCA.run": {"tf": 3.1622776601683795}, "maps.analyses.PCA.fit": {"tf": 6.244997998398398}, "maps.analyses.MAP.__init__": {"tf": 4.47213595499958}, "maps.analyses.MAP.run": {"tf": 3.1622776601683795}, "maps.analyses.MAP.fit": {"tf": 3.1622776601683795}, "maps.analyses.MAP.make_table": {"tf": 4.898979485566356}}, "df": 60, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 6}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 9}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ScreenBase.get_data": {"tf": 1}, "maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.analyses.PCA.run": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}, "maps.analyses.MAP.run": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 28}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.loaders.OperettaLoader.list_antibodies": {"tf": 1.7320508075688772}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 10, "s": {"docs": {"maps.processing.drop_na_features": {"tf": 1.4142135623730951}, "maps.processing.drop_constant_features": {"tf": 1.4142135623730951}, "maps.processing.select_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_feature_types": {"tf": 1.4142135623730951}, "maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_count": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}, "maps.processing.subsample_rows_by_id": {"tf": 1.4142135623730951}, "maps.processing.pca_transform": {"tf": 1.4142135623730951}, "maps.processing.group_markers": {"tf": 1.4142135623730951}, "maps.processing.standardize_features": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 22}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.drop_na_features": {"tf": 1.4142135623730951}, "maps.processing.drop_constant_features": {"tf": 1.4142135623730951}, "maps.processing.select_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_feature_types": {"tf": 1.4142135623730951}, "maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_count": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}, "maps.processing.subsample_rows_by_id": {"tf": 1.4142135623730951}, "maps.processing.pca_transform": {"tf": 1.4142135623730951}, "maps.processing.group_markers": {"tf": 1.4142135623730951}, "maps.processing.standardize_features": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 22}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1.4142135623730951}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}}, "df": 2}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"maps.models.BaseModel.fit": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 2}, "maps.models.BaseModel.predict": {"tf": 2}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 13, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 1}}}}}}}}, "x": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}}, "df": 23}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.drop_na_features": {"tf": 1.4142135623730951}, "maps.processing.drop_constant_features": {"tf": 1.4142135623730951}, "maps.processing.select_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_feature_types": {"tf": 1.4142135623730951}, "maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_count": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}, "maps.processing.subsample_rows_by_id": {"tf": 1.4142135623730951}, "maps.processing.pca_transform": {"tf": 1.4142135623730951}, "maps.processing.group_markers": {"tf": 1.4142135623730951}, "maps.processing.standardize_features": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_mut": {"tf": 1.4142135623730951}, "maps.fitters.sample_split": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_sklearn": {"tf": 1.4142135623730951}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 22}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 8, "s": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 8}}}}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}}, "df": 16}}}}}}, "y": {"docs": {"maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "d": {"docs": {"maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 9, "s": {"docs": {"maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}}, "df": 4, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"maps.models.Logistic.get_importance": {"tf": 1.4142135623730951}, "maps.models.RandomForest.get_importance": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_data": {"tf": 2}, "maps.analyses.MAP.make_table": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 9}}, "r": {"docs": {"maps.loaders.OperettaLoader.load_metadata": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.4142135623730951}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 5}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 8}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 6}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"maps.analyses.PCA.fit": {"tf": 1}}, "df": 1}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}}, "df": 2}}}}}}}}}, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.models.Logistic": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.models.SKLearnModel": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"maps.models.BinaryLogistic": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.BinaryRandomForest": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.models.MultiAntibody": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "doc": {"root": {"0": {"0": {"1": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}, "maps.processing.pca_transform": {"tf": 1.4142135623730951}, "maps.models.BinaryLogistic": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 7}, "1": {"0": {"0": {"0": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1.4142135623730951}, "maps.models.Logistic": {"tf": 1}}, "df": 2}, "docs": {"maps.processing.drop_cells_by_count": {"tf": 1.4142135623730951}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "6": {"docs": {"maps.models.MultiAntibody": {"tf": 1}}, "df": 1}, "docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}}, "df": 6}, "2": {"5": {"0": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"maps.models.MultiAntibody": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1.4142135623730951}}, "df": 3}, "4": {"2": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}}, "df": 1}, "7": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "5": {"0": {"docs": {"maps.models.BinaryRandomForest": {"tf": 1}}, "df": 1, "/": {"5": {"0": {"docs": {"maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 2}, "9": {"0": {"docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1}, "docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1}, "docs": {"maps.screens": {"tf": 2.8284271247461903}, "maps.screens.ScreenBase": {"tf": 5.196152422706632}, "maps.screens.ScreenBase.__init__": {"tf": 2.6457513110645907}, "maps.screens.ScreenBase.params": {"tf": 1.7320508075688772}, "maps.screens.ScreenBase.loader": {"tf": 1.7320508075688772}, "maps.screens.ScreenBase.data": {"tf": 1.7320508075688772}, "maps.screens.ScreenBase.metadata": {"tf": 1.7320508075688772}, "maps.screens.ScreenBase.get_response": {"tf": 4.123105625617661}, "maps.screens.ScreenBase.get_data": {"tf": 2.449489742783178}, "maps.screens.ScreenBase.preprocess": {"tf": 3}, "maps.screens.ImageScreen": {"tf": 6.324555320336759}, "maps.screens.ImageScreen.__init__": {"tf": 2.6457513110645907}, "maps.screens.ImageScreen.preprocessed": {"tf": 1.7320508075688772}, "maps.screens.ImageScreen.loaded": {"tf": 1.7320508075688772}, "maps.screens.ImageScreen.load": {"tf": 3.1622776601683795}, "maps.screens.ImageScreenMultiAntibody": {"tf": 5.830951894845301}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 2.6457513110645907}, "maps.screens.ImageScreenMultiAntibody.preprocessed": {"tf": 1.7320508075688772}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 3.605551275463989}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 2.449489742783178}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 4}, "maps.processing": {"tf": 2.23606797749979}, "maps.processing.drop_na_features": {"tf": 7.615773105863909}, "maps.processing.drop_constant_features": {"tf": 3.605551275463989}, "maps.processing.select_feature_types": {"tf": 9}, "maps.processing.drop_feature_types": {"tf": 9}, "maps.processing.select_sample_by_feature": {"tf": 10.14889156509222}, "maps.processing.drop_sample_by_feature": {"tf": 10.488088481701515}, "maps.processing.drop_cells_by_count": {"tf": 8.54400374531753}, "maps.processing.drop_cells_by_feature_qt": {"tf": 9.055385138137417}, "maps.processing.subsample_rows_by_id": {"tf": 8.54400374531753}, "maps.processing.pca_transform": {"tf": 9.38083151964686}, "maps.processing.group_markers": {"tf": 9.219544457292887}, "maps.processing.standardize_features": {"tf": 6.782329983125268}, "maps.models": {"tf": 4.47213595499958}, "maps.models.DEFAULT_SEED": {"tf": 1.7320508075688772}, "maps.models.BaseModel": {"tf": 5.656854249492381}, "maps.models.BaseModel.__init__": {"tf": 2.449489742783178}, "maps.models.BaseModel.params": {"tf": 1.7320508075688772}, "maps.models.BaseModel.model": {"tf": 1.7320508075688772}, "maps.models.BaseModel.fitted": {"tf": 1.7320508075688772}, "maps.models.BaseModel.fit": {"tf": 3.872983346207417}, "maps.models.BaseModel.predict": {"tf": 4}, "maps.models.BaseModel.get_importance": {"tf": 3.605551275463989}, "maps.models.SKLearnModel": {"tf": 2.6457513110645907}, "maps.models.SKLearnModel.__init__": {"tf": 2.449489742783178}, "maps.models.SKLearnModel.model_type": {"tf": 1.7320508075688772}, "maps.models.PyTorchModel": {"tf": 2.6457513110645907}, "maps.models.PyTorchModel.__init__": {"tf": 2.449489742783178}, "maps.models.PyTorchModel.params": {"tf": 1.7320508075688772}, "maps.models.PyTorchModel.model_type": {"tf": 1.7320508075688772}, "maps.models.Logistic": {"tf": 5.830951894845301}, "maps.models.Logistic.__init__": {"tf": 2.449489742783178}, "maps.models.Logistic.scaler": {"tf": 1.7320508075688772}, "maps.models.Logistic.model": {"tf": 1.7320508075688772}, "maps.models.Logistic.fitted": {"tf": 1.7320508075688772}, "maps.models.Logistic.scaled": {"tf": 1.7320508075688772}, "maps.models.Logistic.fit": {"tf": 3}, "maps.models.Logistic.predict": {"tf": 3.7416573867739413}, "maps.models.Logistic.get_importance": {"tf": 3.605551275463989}, "maps.models.BinaryLogistic": {"tf": 5.196152422706632}, "maps.models.BinaryLogistic.predict": {"tf": 3.3166247903554}, "maps.models.RandomForest": {"tf": 5.656854249492381}, "maps.models.RandomForest.__init__": {"tf": 2.449489742783178}, "maps.models.RandomForest.model": {"tf": 1.7320508075688772}, "maps.models.RandomForest.fitted": {"tf": 1.7320508075688772}, "maps.models.RandomForest.fit": {"tf": 3}, "maps.models.RandomForest.predict": {"tf": 3.7416573867739413}, "maps.models.RandomForest.get_importance": {"tf": 3.605551275463989}, "maps.models.BinaryRandomForest": {"tf": 5.196152422706632}, "maps.models.BinaryRandomForest.predict": {"tf": 3.3166247903554}, "maps.models.MultiAntibody": {"tf": 6.324555320336759}, "maps.models.MultiAntibody.__init__": {"tf": 2.449489742783178}, "maps.models.MultiAntibody.model": {"tf": 1.7320508075688772}, "maps.models.MultiAntibody.fitted": {"tf": 1.7320508075688772}, "maps.models.MultiAntibody.fit": {"tf": 3}, "maps.models.MultiAntibody.predict": {"tf": 3.4641016151377544}, "maps.loaders": {"tf": 4.58257569495584}, "maps.loaders.OperettaLoader": {"tf": 10.63014581273465}, "maps.loaders.OperettaLoader.__init__": {"tf": 4.58257569495584}, "maps.loaders.OperettaLoader.params": {"tf": 1.7320508075688772}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 3.605551275463989}, "maps.loaders.OperettaLoader.load_data": {"tf": 3.4641016151377544}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 3.1622776601683795}, "maps.fitters": {"tf": 4.898979485566356}, "maps.fitters.leave_one_out_mut": {"tf": 4.898979485566356}, "maps.fitters.leave_one_out": {"tf": 5}, "maps.fitters.leave_one_out_sklearn": {"tf": 4.898979485566356}, "maps.fitters.leave_one_out_pytorch": {"tf": 5.477225575051661}, "maps.fitters.sample_split_mut": {"tf": 4.898979485566356}, "maps.fitters.sample_split": {"tf": 5}, "maps.fitters.sample_split_pytorch": {"tf": 5.5677643628300215}, "maps.fitters.sample_split_sklearn": {"tf": 5}, "maps.analyses": {"tf": 3.1622776601683795}, "maps.analyses.PCA": {"tf": 8.660254037844387}, "maps.analyses.PCA.__init__": {"tf": 2.6457513110645907}, "maps.analyses.PCA.screen": {"tf": 1.7320508075688772}, "maps.analyses.PCA.run": {"tf": 1.7320508075688772}, "maps.analyses.PCA.fit": {"tf": 3.1622776601683795}, "maps.analyses.MAP": {"tf": 9.643650760992955}, "maps.analyses.MAP.__init__": {"tf": 3.4641016151377544}, "maps.analyses.MAP.params": {"tf": 1.7320508075688772}, "maps.analyses.MAP.model": {"tf": 1.7320508075688772}, "maps.analyses.MAP.fitter": {"tf": 1.7320508075688772}, "maps.analyses.MAP.is_fitted": {"tf": 1.7320508075688772}, "maps.analyses.MAP.run": {"tf": 2.449489742783178}, "maps.analyses.MAP.fit": {"tf": 2.449489742783178}, "maps.analyses.MAP.make_table": {"tf": 3.4641016151377544}}, "df": 108, "s": {"docs": {"maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1.4142135623730951}}, "df": 11, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ScreenBase": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 2}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.processing": {"tf": 1}, "maps.processing.drop_na_features": {"tf": 2}, "maps.processing.drop_constant_features": {"tf": 1.4142135623730951}, "maps.processing.select_feature_types": {"tf": 2}, "maps.processing.drop_feature_types": {"tf": 2}, "maps.processing.select_sample_by_feature": {"tf": 2}, "maps.processing.drop_sample_by_feature": {"tf": 2}, "maps.processing.drop_cells_by_count": {"tf": 2}, "maps.processing.drop_cells_by_feature_qt": {"tf": 2}, "maps.processing.subsample_rows_by_id": {"tf": 2}, "maps.processing.pca_transform": {"tf": 2}, "maps.processing.group_markers": {"tf": 2}, "maps.processing.standardize_features": {"tf": 2}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1.7320508075688772}, "maps.loaders.OperettaLoader.__init__": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1.4142135623730951}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_mut": {"tf": 1.4142135623730951}, "maps.fitters.sample_split": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_sklearn": {"tf": 1.4142135623730951}, "maps.analyses.PCA": {"tf": 1.7320508075688772}, "maps.analyses.PCA.__init__": {"tf": 1.4142135623730951}, "maps.analyses.PCA.fit": {"tf": 1}, "maps.analyses.MAP": {"tf": 1.7320508075688772}, "maps.analyses.MAP.__init__": {"tf": 1.7320508075688772}}, "df": 36, "s": {"docs": {"maps.screens": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}}, "df": 2}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.processing.drop_na_features": {"tf": 1.4142135623730951}, "maps.processing.drop_constant_features": {"tf": 1.4142135623730951}, "maps.processing.select_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_feature_types": {"tf": 1.4142135623730951}, "maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_count": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}, "maps.processing.subsample_rows_by_id": {"tf": 1.4142135623730951}, "maps.processing.pca_transform": {"tf": 1.4142135623730951}, "maps.processing.group_markers": {"tf": 1.4142135623730951}, "maps.processing.standardize_features": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 26}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.screens.ScreenBase": {"tf": 1.7320508075688772}, "maps.screens.ScreenBase.get_data": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.standardize_features": {"tf": 1}, "maps.models.Logistic": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.models.Logistic": {"tf": 1.7320508075688772}, "maps.models.Logistic.predict": {"tf": 1}}, "df": 2, "s": {"docs": {"maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_pytorch": {"tf": 1.7320508075688772}}, "df": 3}}, "d": {"docs": {"maps.models.Logistic": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.standardize_features": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 2, "s": {"docs": {"maps.models": {"tf": 1}, "maps.analyses.MAP": {"tf": 1.4142135623730951}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.fitters": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.run": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"maps.models": {"tf": 1}, "maps.models.SKLearnModel": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}}, "df": 5}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.screens": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 2}, "s": {"docs": {"maps.analyses.MAP.run": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1, "s": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}}, "df": 3}}}, "r": {"docs": {"maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1.7320508075688772}, "maps.processing.drop_feature_types": {"tf": 1.7320508075688772}, "maps.models.SKLearnModel": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 2}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.group_markers": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.analyses.MAP": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.select_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_feature_types": {"tf": 1.4142135623730951}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing.standardize_features": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.standardize_features": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"maps.processing.standardize_features": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 2}, "s": {"docs": {"maps.loaders.OperettaLoader.load_metadata": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.models.Logistic": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"maps.models.MultiAntibody": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ScreenBase": {"tf": 1.7320508075688772}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.models.BaseModel": {"tf": 1.4142135623730951}, "maps.analyses": {"tf": 1.4142135623730951}}, "df": 7}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.4142135623730951}, "maps.processing": {"tf": 1}, "maps.processing.drop_na_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.models": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1.4142135623730951}, "maps.analyses.MAP.run": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1.4142135623730951}}, "df": 20}}}, "y": {"docs": {"maps.fitters": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.models.MultiAntibody": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.select_feature_types": {"tf": 2}}, "df": 1}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"maps.fitters.sample_split_mut": {"tf": 1.7320508075688772}, "maps.fitters.sample_split": {"tf": 1.7320508075688772}, "maps.fitters.sample_split_pytorch": {"tf": 2.6457513110645907}, "maps.fitters.sample_split_sklearn": {"tf": 2.23606797749979}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 5, "s": {"docs": {"maps.fitters": {"tf": 1.7320508075688772}, "maps.fitters.sample_split": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.models": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}}, "df": 7}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.standardize_features": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {"maps.processing.drop_feature_types": {"tf": 2}}, "df": 1}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.fitters": {"tf": 1.7320508075688772}, "maps.analyses": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 11}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"maps.screens.ScreenBase.preprocess": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}}, "df": 4}}}}}}}}, "t": {"docs": {"maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.models.SKLearnModel": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.select_feature_types": {"tf": 1.4142135623730951}, "maps.processing.select_sample_by_feature": {"tf": 1.7320508075688772}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {"maps.analyses.MAP.fit": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1.7320508075688772}, "maps.models": {"tf": 1.4142135623730951}, "maps.fitters.sample_split": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_sklearn": {"tf": 1.4142135623730951}}, "df": 5}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.models.BaseModel": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ImageScreen": {"tf": 2}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 9}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"maps.screens.ImageScreenMultiAntibody": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.subsample_rows_by_id": {"tf": 1.4142135623730951}, "maps.fitters": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1.4142135623730951}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 9, "s": {"docs": {"maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 2}, "maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1.4142135623730951}, "maps.models.Logistic.predict": {"tf": 1.4142135623730951}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1.4142135623730951}, "maps.models.RandomForest.predict": {"tf": 1.4142135623730951}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 12}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {"maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.loaders": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders": {"tf": 1}, "maps.fitters": {"tf": 1}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"maps.models.SKLearnModel": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 5, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 7}}}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1.4142135623730951}, "maps.processing.drop_na_features": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.models": {"tf": 1.4142135623730951}, "maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1.4142135623730951}, "maps.models.RandomForest.__init__": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody.__init__": {"tf": 1.4142135623730951}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.fitters": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.analyses": {"tf": 1}}, "df": 23, "r": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1.7320508075688772}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.processing": {"tf": 1.4142135623730951}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1.4142135623730951}, "maps.loaders": {"tf": 1}, "maps.fitters": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 18, "a": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1.7320508075688772}}, "df": 1}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 53}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}}, "df": 13}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"maps.models.Logistic.fit": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}}, "df": 2, "s": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"maps.models.MultiAntibody": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.fitters": {"tf": 1}}, "df": 6, "d": {"docs": {"maps.screens": {"tf": 1.7320508075688772}, "maps.screens.ScreenBase": {"tf": 1.4142135623730951}, "maps.screens.ScreenBase.preprocess": {"tf": 1.4142135623730951}, "maps.screens.ImageScreen": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1.4142135623730951}, "maps.processing": {"tf": 1.4142135623730951}, "maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 2}, "maps.processing.drop_feature_types": {"tf": 2}, "maps.processing.select_sample_by_feature": {"tf": 2}, "maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.7320508075688772}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1.4142135623730951}, "maps.processing.group_markers": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1.7320508075688772}, "maps.models": {"tf": 1.7320508075688772}, "maps.models.BaseModel": {"tf": 1.7320508075688772}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders": {"tf": 2.449489742783178}, "maps.loaders.OperettaLoader": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.7320508075688772}, "maps.fitters": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_mut": {"tf": 1.4142135623730951}, "maps.fitters.sample_split": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1.4142135623730951}, "maps.analyses": {"tf": 1.4142135623730951}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}, "maps.analyses.MAP": {"tf": 1.4142135623730951}, "maps.analyses.MAP.run": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 50}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ScreenBase": {"tf": 1.4142135623730951}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.fitters": {"tf": 1.4142135623730951}, "maps.analyses": {"tf": 2.8284271247461903}, "maps.analyses.PCA": {"tf": 1.4142135623730951}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.MAP": {"tf": 2.449489742783178}, "maps.analyses.MAP.__init__": {"tf": 1.7320508075688772}}, "df": 14}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.screens.ScreenBase": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"maps.screens.ImageScreen": {"tf": 1.7320508075688772}, "maps.screens.ImageScreen.load": {"tf": 2}, "maps.screens.ImageScreenMultiAntibody": {"tf": 2.449489742783178}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 2.6457513110645907}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.7320508075688772}, "maps.models.MultiAntibody": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 2.23606797749979}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 13}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 5}}}}}}}}, "y": {"docs": {"maps.fitters.leave_one_out": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.analyses.PCA.fit": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"maps.fitters.leave_one_out": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ImageScreen": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.SKLearnModel": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 12}}}}}}}}}, "s": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}, "maps.models.BaseModel": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.fitters": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 8}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.SKLearnModel": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1.4142135623730951}, "maps.analyses": {"tf": 1}}, "df": 22}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.select_feature_types": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"maps.processing.pca_transform": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.analyses.MAP": {"tf": 1.4142135623730951}}, "df": 3}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}}, "df": 3}, "d": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"maps.analyses.PCA": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.processing": {"tf": 1}, "maps.processing.drop_na_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1.7320508075688772}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}}, "df": 15, "l": {"docs": {}, "df": 0, "y": {"docs": {"maps.fitters": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 2.23606797749979}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 2, "d": {"docs": {"maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.models": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1.7320508075688772}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.analyses.PCA.fit": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens": {"tf": 1.7320508075688772}, "maps.screens.ScreenBase": {"tf": 1.7320508075688772}, "maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ScreenBase.get_data": {"tf": 1.4142135623730951}, "maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1.4142135623730951}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.4142135623730951}, "maps.processing": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}, "maps.models": {"tf": 1}, "maps.models.BaseModel": {"tf": 1.4142135623730951}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic": {"tf": 1.7320508075688772}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1.7320508075688772}, "maps.models.RandomForest": {"tf": 1.4142135623730951}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.loaders": {"tf": 2.8284271247461903}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1.7320508075688772}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses": {"tf": 2}, "maps.analyses.PCA.fit": {"tf": 1.4142135623730951}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 45, "i": {"docs": {}, "df": 0, "r": {"docs": {"maps.screens.ScreenBase": {"tf": 1}}, "df": 1}}, "m": {"docs": {"maps.screens.ScreenBase.preprocess": {"tf": 1}}, "df": 1}, "n": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.drop_constant_features": {"tf": 1}, "maps.fitters": {"tf": 1.4142135623730951}}, "df": 2}}, "y": {"docs": {"maps.fitters": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ScreenBase": {"tf": 1.4142135623730951}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.models": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.loaders": {"tf": 1.4142135623730951}}, "df": 13}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.processing": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}}, "df": 2, "s": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.loaders": {"tf": 1.7320508075688772}, "maps.fitters": {"tf": 1.4142135623730951}}, "df": 4}, "n": {"docs": {"maps.processing.drop_na_features": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"maps.fitters": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ScreenBase": {"tf": 1.7320508075688772}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ScreenBase.get_response": {"tf": 1.4142135623730951}, "maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.7320508075688772}, "maps.processing.drop_na_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1.7320508075688772}, "maps.processing.drop_feature_types": {"tf": 1.4142135623730951}, "maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_count": {"tf": 1.7320508075688772}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.7320508075688772}, "maps.processing.subsample_rows_by_id": {"tf": 2}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}, "maps.models": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 2.23606797749979}, "maps.models.BaseModel.predict": {"tf": 2}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.SKLearnModel": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 2}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.fitters": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 1.7320508075688772}, "maps.fitters.sample_split": {"tf": 1.7320508075688772}, "maps.fitters.sample_split_pytorch": {"tf": 2}, "maps.fitters.sample_split_sklearn": {"tf": 1.7320508075688772}, "maps.analyses": {"tf": 1.4142135623730951}, "maps.analyses.PCA.fit": {"tf": 1.4142135623730951}, "maps.analyses.MAP": {"tf": 1.4142135623730951}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 53, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.processing.group_markers": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.models.SKLearnModel": {"tf": 1.4142135623730951}, "maps.models.PyTorchModel": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.analyses": {"tf": 1}}, "df": 9, "s": {"docs": {"maps.screens": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.models": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing.pca_transform": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing.pca_transform": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}}, "df": 2}, "r": {"docs": {"maps.models.MultiAntibody": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"maps.models.BaseModel.fit": {"tf": 1}, "maps.models.Logistic": {"tf": 1.4142135623730951}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1.4142135623730951}, "maps.models.RandomForest": {"tf": 1.4142135623730951}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.models.BaseModel.fit": {"tf": 1.7320508075688772}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 2}, "maps.fitters.sample_split_mut": {"tf": 1.7320508075688772}, "maps.fitters.sample_split": {"tf": 1.7320508075688772}, "maps.fitters.sample_split_pytorch": {"tf": 2}, "maps.fitters.sample_split_sklearn": {"tf": 1.4142135623730951}}, "df": 15}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"maps.models.MultiAntibody.__init__": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 5}}, "s": {"docs": {"maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 4}}}}}, "d": {"docs": {}, "df": 0, "p": {"4": {"3": {"docs": {"maps.processing.drop_sample_by_feature": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.BaseModel.predict": {"tf": 1.7320508075688772}, "maps.models.Logistic": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1.4142135623730951}, "maps.models.BinaryLogistic": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1.4142135623730951}, "maps.models.RandomForest": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1.4142135623730951}, "maps.models.BinaryRandomForest": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.fitters.leave_one_out_pytorch": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"maps.models.BinaryRandomForest": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.analyses": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "\u2014": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"maps.analyses": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 1}}, "df": 2}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 1, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 3}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"maps.screens": {"tf": 1}}, "df": 1}}, "e": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.SKLearnModel": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"maps.screens": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.models": {"tf": 1}, "maps.models.SKLearnModel": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}}, "df": 8}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.models": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 13}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.models.MultiAntibody": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"maps.fitters": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}}, "df": 3, "s": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 3}}}}}}}}}}, "e": {"docs": {"maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.processing.drop_na_features": {"tf": 1.4142135623730951}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.4142135623730951}, "maps.fitters": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.analyses": {"tf": 1.4142135623730951}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 15, "e": {"docs": {}, "df": 0, "n": {"docs": {"maps.screens.ImageScreen": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.Logistic": {"tf": 1.4142135623730951}, "maps.models.Logistic.predict": {"tf": 1.4142135623730951}, "maps.models.RandomForest": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 13}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"maps.analyses.PCA.fit": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "y": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1.7320508075688772}, "maps.processing.group_markers": {"tf": 1.7320508075688772}, "maps.processing.standardize_features": {"tf": 1.4142135623730951}, "maps.models": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_mut": {"tf": 1.4142135623730951}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1.7320508075688772}, "maps.analyses.MAP": {"tf": 1}}, "df": 25}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.Logistic": {"tf": 1.4142135623730951}, "maps.models.RandomForest": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 11}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"maps.models.BinaryLogistic": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1.4142135623730951}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"maps.models.Logistic.__init__": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.BinaryLogistic": {"tf": 1}, "maps.loaders": {"tf": 1}}, "df": 2}}}, "c": {"9": {"0": {"1": {"4": {"docs": {"maps.processing.drop_sample_by_feature": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"7": {"2": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "docs": {"maps.models.BinaryLogistic": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.screens": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.screens.ScreenBase": {"tf": 1.4142135623730951}, "maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1.4142135623730951}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.MAP": {"tf": 1.4142135623730951}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 24}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}}, "df": 1, "s": {"docs": {"maps.analyses.MAP": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}, "maps.analyses.MAP": {"tf": 1.4142135623730951}}, "df": 2, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 6, "s": {"docs": {"maps.screens.ScreenBase": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.drop_constant_features": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 1}, "d": {"docs": {"maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}}, "df": 3}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ScreenBase": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}}, "df": 2}, "s": {"docs": {"maps.fitters.sample_split": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"maps.analyses.MAP.run": {"tf": 1}}, "df": 1, "d": {"docs": {"maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 2}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"maps.models": {"tf": 1}}, "df": 1, "d": {"docs": {"maps.analyses.MAP": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.models.BaseModel": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.analyses.PCA": {"tf": 1}}, "df": 1, "s": {"docs": {"maps.processing.pca_transform": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}}, "df": 2}}}}}}}}, "x": {"docs": {"maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1.4142135623730951}}, "df": 17, "s": {"docs": {"maps.processing.drop_na_features": {"tf": 1.7320508075688772}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1.4142135623730951}}, "df": 13}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 2.8284271247461903}}, "df": 1, "s": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens": {"tf": 1.4142135623730951}, "maps.screens.ScreenBase": {"tf": 1.7320508075688772}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1.4142135623730951}, "maps.models.BaseModel": {"tf": 1.4142135623730951}, "maps.models.SKLearnModel": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1.4142135623730951}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1.4142135623730951}, "maps.models.BinaryRandomForest": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1.7320508075688772}}, "df": 16, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.analyses": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.models": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1.4142135623730951}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.analyses.MAP": {"tf": 1.4142135623730951}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 10}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.models.RandomForest": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1}}, "df": 2, "s": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}}, "df": 2}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "n": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 6}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"maps.analyses": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.analyses.MAP.make_table": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"maps.screens.ImageScreen": {"tf": 1.7320508075688772}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 3}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 2.449489742783178}, "maps.fitters.leave_one_out_sklearn": {"tf": 2}, "maps.fitters.leave_one_out_pytorch": {"tf": 2.449489742783178}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 2}, "maps.fitters.sample_split_pytorch": {"tf": 2.23606797749979}, "maps.fitters.sample_split_sklearn": {"tf": 1.4142135623730951}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 18, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_feature_qt": {"tf": 2.6457513110645907}, "maps.processing.subsample_rows_by_id": {"tf": 2.23606797749979}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 5}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.fitters.sample_split_sklearn": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.loaders.OperettaLoader.load_metadata": {"tf": 1}}, "df": 1, "s": {"docs": {"maps.processing.drop_feature_types": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1.7320508075688772}, "maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 7}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ScreenBase": {"tf": 1.7320508075688772}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.4142135623730951}, "maps.processing": {"tf": 1.4142135623730951}, "maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}, "maps.processing.subsample_rows_by_id": {"tf": 1.4142135623730951}, "maps.processing.pca_transform": {"tf": 1.4142135623730951}, "maps.processing.group_markers": {"tf": 1.4142135623730951}, "maps.processing.standardize_features": {"tf": 1}, "maps.models": {"tf": 1.4142135623730951}, "maps.models.BaseModel": {"tf": 1.4142135623730951}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1.4142135623730951}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.SKLearnModel": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.models.Logistic": {"tf": 1.4142135623730951}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1.4142135623730951}, "maps.models.RandomForest": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1.4142135623730951}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1.7320508075688772}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.4142135623730951}, "maps.fitters": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_mut": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 2}, "maps.fitters.sample_split_mut": {"tf": 2}, "maps.fitters.sample_split": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_pytorch": {"tf": 2}, "maps.fitters.sample_split_sklearn": {"tf": 1.4142135623730951}, "maps.analyses": {"tf": 1.4142135623730951}, "maps.analyses.PCA": {"tf": 1.4142135623730951}, "maps.analyses.PCA.fit": {"tf": 1}, "maps.analyses.MAP": {"tf": 1.4142135623730951}}, "df": 53, "m": {"docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.RandomForest": {"tf": 1.4142135623730951}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.fitters": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"maps.analyses": {"tf": 1}}, "df": 1, "s": {"docs": {"maps.screens": {"tf": 1}, "maps.analyses": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}}, "df": 4, "s": {"docs": {"maps.loaders": {"tf": 1.7320508075688772}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 3}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 1}}}}, "\u2014": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"maps.analyses": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 14, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.models": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.models.BaseModel": {"tf": 1.4142135623730951}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic": {"tf": 1.7320508075688772}, "maps.models.Logistic.predict": {"tf": 1.4142135623730951}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest": {"tf": 1.4142135623730951}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.fitters": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_mut": {"tf": 1.4142135623730951}, "maps.fitters.sample_split": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_sklearn": {"tf": 1.4142135623730951}, "maps.analyses.PCA": {"tf": 2}, "maps.analyses.MAP": {"tf": 2.23606797749979}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 22}, "r": {"docs": {"maps.fitters": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.analyses.MAP": {"tf": 2}, "maps.analyses.MAP.run": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"maps.fitters": {"tf": 1.7320508075688772}, "maps.analyses.MAP": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"maps.analyses.MAP.run": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.loaders": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.loaders": {"tf": 1.7320508075688772}, "maps.loaders.OperettaLoader": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1.7320508075688772}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.MAP": {"tf": 1.7320508075688772}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 22}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing": {"tf": 1.4142135623730951}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"maps.screens.ScreenBase": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.fitters": {"tf": 1.7320508075688772}, "maps.analyses": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {"maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"1": {"docs": {"maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.select_feature_types": {"tf": 2.23606797749979}, "maps.processing.drop_feature_types": {"tf": 2.23606797749979}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 2.6457513110645907}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}, "maps.models": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1.7320508075688772}, "maps.models.Logistic": {"tf": 1.4142135623730951}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1.7320508075688772}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 2}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 29, "s": {"docs": {"maps.processing.drop_na_features": {"tf": 1.4142135623730951}, "maps.processing.drop_constant_features": {"tf": 1.4142135623730951}, "maps.processing.select_feature_types": {"tf": 2.23606797749979}, "maps.processing.drop_feature_types": {"tf": 2.23606797749979}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.pca_transform": {"tf": 2.23606797749979}, "maps.processing.group_markers": {"tf": 2.8284271247461903}, "maps.processing.standardize_features": {"tf": 1.7320508075688772}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1.4142135623730951}}, "df": 15}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.loaders": {"tf": 1.7320508075688772}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "d": {"3": {"7": {"docs": {"maps.processing.drop_sample_by_feature": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.fitters": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.analyses": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}, "maps.analyses.MAP.run": {"tf": 1}}, "df": 8, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.screens": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 2}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 2.6457513110645907}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"maps.fitters": {"tf": 1}}, "df": 1, "s": {"docs": {"maps.analyses.PCA": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.run": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.fitters": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ScreenBase.get_data": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1.4142135623730951}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1.4142135623730951}}, "df": 38}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}}, "df": 2}}, "s": {"docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing": {"tf": 1}, "maps.loaders": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"maps.loaders.OperettaLoader.load_metadata": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.drop_na_features": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.fitters.sample_split": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.drop_na_features": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 2, "s": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 5}, "d": {"docs": {"maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.7320508075688772}, "maps.fitters": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.processing.drop_feature_types": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.standardize_features": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"maps.processing.select_feature_types": {"tf": 2}, "maps.processing.drop_feature_types": {"tf": 2}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1.4142135623730951}}, "df": 4}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.models.Logistic": {"tf": 1.4142135623730951}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1}}, "df": 3}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.analyses.PCA": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.group_markers": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.models.MultiAntibody": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"maps.fitters": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"maps.fitters.sample_split": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"maps.screens.ImageScreen": {"tf": 1.4142135623730951}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}}, "df": 3, "s": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.loaders": {"tf": 1.4142135623730951}}, "df": 2}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 12}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.models": {"tf": 1}, "maps.models.RandomForest": {"tf": 1.4142135623730951}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 9, "l": {"docs": {}, "df": 0, "y": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.RandomForest": {"tf": 1.4142135623730951}, "maps.models.RandomForest.__init__": {"tf": 1.4142135623730951}, "maps.models.BinaryRandomForest": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.models.RandomForest": {"tf": 1.4142135623730951}, "maps.models.RandomForest.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_feature_types": {"tf": 1.4142135623730951}, "maps.processing.pca_transform": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 7, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"maps.analyses": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.4142135623730951}}, "df": 2}}}}, "d": {"docs": {"maps.processing.select_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_feature_types": {"tf": 1.4142135623730951}}, "df": 2}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"maps.screens": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ScreenBase": {"tf": 1}}, "df": 2, "s": {"docs": {"maps.models.BinaryLogistic": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}}, "df": 3, "s": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.models": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.processing.drop_na_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 21}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.drop_na_features": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.drop_feature_types": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 6}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing.drop_sample_by_feature": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.4142135623730951}, "maps.processing": {"tf": 1.4142135623730951}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1.4142135623730951}, "maps.processing.group_markers": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_mut": {"tf": 1.7320508075688772}, "maps.fitters.sample_split": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_pytorch": {"tf": 1.7320508075688772}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses": {"tf": 1.4142135623730951}}, "df": 23}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"1": {"docs": {"maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"maps.models.Logistic.predict": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 4}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"maps.models.RandomForest": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"maps.models.MultiAntibody": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"1": {"docs": {"maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 1}, "docs": {"maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.fitters": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens": {"tf": 1}, "maps.models": {"tf": 1}}, "df": 2, "s": {"docs": {"maps.fitters": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ScreenBase": {"tf": 1.4142135623730951}, "maps.screens.ScreenBase.preprocess": {"tf": 1.4142135623730951}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1.4142135623730951}, "maps.processing": {"tf": 1.7320508075688772}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}}, "df": 3}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing.standardize_features": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.BaseModel": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.models": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}}, "df": 3, "s": {"docs": {"maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1.4142135623730951}, "maps.models.Logistic": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1.4142135623730951}, "maps.models.BinaryLogistic": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1.4142135623730951}, "maps.models.RandomForest": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1.4142135623730951}, "maps.models.BinaryRandomForest": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1.4142135623730951}, "maps.fitters": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1.4142135623730951}, "maps.analyses.MAP": {"tf": 1.7320508075688772}, "maps.analyses.MAP.fit": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 24}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.models.RandomForest.predict": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.MAP": {"tf": 1.4142135623730951}}, "df": 11}}, "s": {"docs": {"maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.processing": {"tf": 1.4142135623730951}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.models.MultiAntibody": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.drop_constant_features": {"tf": 1}, "maps.loaders": {"tf": 1}}, "df": 2, "s": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.models": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}}, "df": 3}, "d": {"docs": {"maps.screens.ImageScreen.load": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {"maps.processing.drop_na_features": {"tf": 1.7320508075688772}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing.drop_na_features": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"maps.processing.drop_sample_by_feature": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1.4142135623730951}, "maps.models.BinaryLogistic": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody.predict": {"tf": 1.4142135623730951}}, "df": 5}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.analyses.MAP": {"tf": 1}}, "df": 1}}}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.analyses.PCA": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.processing.pca_transform": {"tf": 1}, "maps.analyses.PCA": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "t": {"docs": {"maps.analyses.PCA": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ScreenBase.preprocess": {"tf": 1.4142135623730951}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.4142135623730951}, "maps.processing": {"tf": 1}, "maps.models": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1.4142135623730951}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1.7320508075688772}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.analyses": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1.4142135623730951}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 25}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}}, "df": 1, "s": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1.4142135623730951}, "maps.models.RandomForest.__init__": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.analyses": {"tf": 1}, "maps.analyses.MAP": {"tf": 1.4142135623730951}, "maps.analyses.MAP.__init__": {"tf": 1.4142135623730951}}, "df": 12}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}}, "df": 2, "s": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing.select_feature_types": {"tf": 1.7320508075688772}, "maps.processing.drop_feature_types": {"tf": 1.7320508075688772}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 5, "s": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}}, "df": 4}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.models.SKLearnModel.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"maps.screens.ScreenBase": {"tf": 1.4142135623730951}, "maps.screens.ScreenBase.get_data": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1.4142135623730951}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1.4142135623730951}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1.4142135623730951}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1.4142135623730951}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1.4142135623730951}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 28, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1.7320508075688772}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1.4142135623730951}}, "df": 3}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1.4142135623730951}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"maps.loaders.OperettaLoader.load_metadata": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ScreenBase": {"tf": 1.4142135623730951}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.loaders": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"maps.models.BinaryLogistic": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.screens.ImageScreen": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1.7320508075688772}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}}, "df": 7, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1, "s": {"docs": {"maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.analyses": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"maps.processing.pca_transform": {"tf": 2.449489742783178}, "maps.analyses.PCA": {"tf": 2.6457513110645907}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 2}}, "df": 4}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"maps.models": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 1.7320508075688772}, "maps.fitters.sample_split_pytorch": {"tf": 1.4142135623730951}}, "df": 8, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}}, "df": 7}}}}}}}}}}}, "d": {"docs": {"maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 7}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"maps.analyses.MAP": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ScreenBase.preprocess": {"tf": 1.4142135623730951}, "maps.screens.ImageScreen": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}, "maps.models": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.analyses": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}, "maps.analyses.MAP.run": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1.4142135623730951}}, "df": 24, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ScreenBase": {"tf": 1}, "maps.models": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 5}}}, "e": {"docs": {"maps.models.Logistic.__init__": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.loaders": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.screens": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 17}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.screens.ScreenBase.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"maps.screens.ImageScreen.load": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 12}}}}}}}}, "f": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing.drop_constant_features": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1.4142135623730951}, "maps.processing.subsample_rows_by_id": {"tf": 1.4142135623730951}, "maps.models": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"maps.processing.select_feature_types": {"tf": 2}}, "df": 1}}}}}}, "o": {"docs": {"maps.processing.group_markers": {"tf": 1.4142135623730951}}, "df": 1}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"maps.models.MultiAntibody.fit": {"tf": 1}, "maps.loaders": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1.4142135623730951}, "maps.analyses.MAP": {"tf": 1}}, "df": 17}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1.7320508075688772}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 2}, "maps.analyses.PCA": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}}, "df": 4, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.drop_na_features": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.models": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.models.BaseModel": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}}, "df": 2, "s": {"docs": {"maps.models": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1.4142135623730951}, "maps.models.Logistic.get_importance": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}}, "df": 6}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"maps.models": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 9, "s": {"docs": {"maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1.4142135623730951}, "maps.models.Logistic.get_importance": {"tf": 1.4142135623730951}, "maps.models.RandomForest.get_importance": {"tf": 1.4142135623730951}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 10}}}}}}}}}}, "t": {"docs": {"maps.models.MultiAntibody": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.models.Logistic": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.fitters.leave_one_out_pytorch": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"3": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}}, "df": 2}}}}}}}}}}, "docs": {}, "df": 0}}}}}}}}}}, "f": {"docs": {"maps.screens.ImageScreen.load": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.4142135623730951}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1.4142135623730951}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1.4142135623730951}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 17}, "d": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}, "maps.processing.subsample_rows_by_id": {"tf": 1.4142135623730951}, "maps.processing.standardize_features": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1.4142135623730951}, "maps.models.Logistic.fit": {"tf": 1.4142135623730951}, "maps.models.Logistic.predict": {"tf": 1.7320508075688772}, "maps.models.BinaryLogistic.predict": {"tf": 1.7320508075688772}, "maps.models.RandomForest.fit": {"tf": 1.4142135623730951}, "maps.models.RandomForest.predict": {"tf": 1.7320508075688772}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1.7320508075688772}, "maps.loaders": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.4142135623730951}, "maps.analyses.PCA.fit": {"tf": 1.4142135623730951}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 18, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.processing.drop_constant_features": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.models.SKLearnModel": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"maps.loaders.OperettaLoader.load_metadata": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1.4142135623730951}}, "df": 9}}, "/": {"docs": {}, "df": 0, "o": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"maps.models.MultiAntibody": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"maps.screens": {"tf": 1.4142135623730951}, "maps.screens.ScreenBase": {"tf": 3.3166247903554}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ScreenBase.get_data": {"tf": 1.4142135623730951}, "maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 2.449489742783178}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 2}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 2}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.processing": {"tf": 1}, "maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1.7320508075688772}, "maps.processing.standardize_features": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1.4142135623730951}, "maps.models.BaseModel.predict": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody": {"tf": 2.23606797749979}, "maps.models.MultiAntibody.fit": {"tf": 1.7320508075688772}, "maps.models.MultiAntibody.predict": {"tf": 1.7320508075688772}, "maps.loaders": {"tf": 2.8284271247461903}, "maps.loaders.OperettaLoader": {"tf": 2.449489742783178}, "maps.loaders.OperettaLoader.__init__": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_data": {"tf": 2.23606797749979}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA": {"tf": 2}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1.4142135623730951}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 47, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ScreenBase": {"tf": 2}, "maps.screens.ScreenBase.get_data": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1.4142135623730951}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1.4142135623730951}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1.4142135623730951}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1.4142135623730951}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1.4142135623730951}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.4142135623730951}, "maps.fitters": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1.4142135623730951}}, "df": 29, "s": {"docs": {"maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1.7320508075688772}, "maps.loaders": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.loaders": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.models.BaseModel.fit": {"tf": 1.4142135623730951}, "maps.models.BaseModel.predict": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}}, "df": 7}}}}}}, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.4142135623730951}, "maps.loaders": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.MAP": {"tf": 1.4142135623730951}}, "df": 25, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ImageScreen.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.__init__": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.run": {"tf": 1}}, "df": 18}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.fitters": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}}, "df": 2}, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.analyses.PCA": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"maps.processing.pca_transform": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"maps.models.MultiAntibody.fit": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"maps.models.MultiAntibody.fit": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.standardize_features": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.fitters.leave_one_out": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.analyses.MAP": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"maps.models": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1.4142135623730951}, "maps.processing.subsample_rows_by_id": {"tf": 1.4142135623730951}, "maps.models.BaseModel.fit": {"tf": 2}, "maps.models.BaseModel.predict": {"tf": 2}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_sklearn": {"tf": 1.4142135623730951}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 24}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders": {"tf": 1.4142135623730951}, "maps.fitters": {"tf": 1}, "maps.analyses": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 4, "d": {"docs": {"maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}, "maps.analyses": {"tf": 1.4142135623730951}, "maps.analyses.MAP": {"tf": 1}}, "df": 4}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing.standardize_features": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.analyses": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"maps.models.MultiAntibody.fit": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}}, "df": 3}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"maps.processing.drop_na_features": {"tf": 1.4142135623730951}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1.7320508075688772}, "maps.processing.drop_sample_by_feature": {"tf": 2}, "maps.processing.drop_cells_by_count": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}}, "df": 6, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing.drop_na_features": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1.4142135623730951}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.models.Logistic": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.fitters": {"tf": 1}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1.4142135623730951}, "maps.loaders": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.screens": {"tf": 1.4142135623730951}, "maps.screens.ScreenBase": {"tf": 1.4142135623730951}, "maps.screens.ScreenBase.__init__": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.screens.ScreenBase": {"tf": 1.4142135623730951}, "maps.screens.ScreenBase.__init__": {"tf": 1.4142135623730951}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 2}, "maps.models.MultiAntibody.fit": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 2.23606797749979}}, "df": 9, "s": {"docs": {"maps.loaders": {"tf": 1.4142135623730951}}, "df": 1}}, "d": {"docs": {"maps.screens.ImageScreen": {"tf": 1.7320508075688772}, "maps.analyses.PCA.__init__": {"tf": 1}}, "df": 2}}, "s": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 2}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"maps.models.BaseModel": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"maps.models.Logistic": {"tf": 2}, "maps.models.Logistic.__init__": {"tf": 1.4142135623730951}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1.4142135623730951}}, "df": 4, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.models.Logistic": {"tf": 1.4142135623730951}, "maps.models.Logistic.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1.4142135623730951}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1.7320508075688772}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1.7320508075688772}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 2}, "maps.fitters.sample_split_mut": {"tf": 1.7320508075688772}, "maps.fitters.sample_split": {"tf": 1.7320508075688772}, "maps.fitters.sample_split_pytorch": {"tf": 1.7320508075688772}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 27, "s": {"docs": {"maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}}, "df": 4}, "[": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 12}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"maps.fitters.leave_one_out": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 5, "s": {"docs": {"maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 2}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 2}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 2}, "maps.fitters.sample_split_mut": {"tf": 1.4142135623730951}, "maps.fitters.sample_split": {"tf": 2.23606797749979}, "maps.fitters.sample_split_pytorch": {"tf": 2}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 11, "\u2014": {"docs": {}, "df": 0, "i": {"docs": {"maps.fitters": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"maps.models": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.screens.ImageScreen": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"maps.models": {"tf": 1}, "maps.models.SKLearnModel": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}}, "df": 5}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 5, "s": {"docs": {"maps.fitters.leave_one_out": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"maps.models.MultiAntibody": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"maps.models.MultiAntibody.predict": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 2.23606797749979}}, "df": 1, "s": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.select_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_feature_types": {"tf": 1.4142135623730951}, "maps.processing.select_sample_by_feature": {"tf": 3.1622776601683795}, "maps.processing.drop_sample_by_feature": {"tf": 3.4641016151377544}, "maps.processing.drop_cells_by_feature_qt": {"tf": 2}, "maps.processing.pca_transform": {"tf": 2}, "maps.processing.group_markers": {"tf": 2.449489742783178}, "maps.loaders.OperettaLoader": {"tf": 3.1622776601683795}, "maps.analyses.MAP": {"tf": 1.4142135623730951}}, "df": 9}}}, "t": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1}}, "m": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.models.MultiAntibody": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"maps.screens": {"tf": 1.4142135623730951}, "maps.screens.ScreenBase": {"tf": 1.4142135623730951}}, "df": 2}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.models": {"tf": 1.4142135623730951}, "maps.analyses": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"maps.processing": {"tf": 1.4142135623730951}, "maps.analyses": {"tf": 1.7320508075688772}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}}, "df": 12}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"maps.models": {"tf": 1.4142135623730951}, "maps.models.BaseModel": {"tf": 2.23606797749979}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.SKLearnModel": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.models.Logistic": {"tf": 3}, "maps.models.Logistic.__init__": {"tf": 1.7320508075688772}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 2}, "maps.models.RandomForest": {"tf": 2.8284271247461903}, "maps.models.RandomForest.__init__": {"tf": 1.7320508075688772}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 2}, "maps.models.MultiAntibody": {"tf": 3.3166247903554}, "maps.models.MultiAntibody.__init__": {"tf": 2}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1.4142135623730951}, "maps.fitters": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_mut": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_mut": {"tf": 1.7320508075688772}, "maps.fitters.sample_split": {"tf": 1.7320508075688772}, "maps.fitters.sample_split_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_sklearn": {"tf": 1.4142135623730951}, "maps.analyses.MAP": {"tf": 1.7320508075688772}}, "df": 34, "s": {"docs": {"maps.models": {"tf": 1}, "maps.models.BaseModel": {"tf": 1.4142135623730951}, "maps.models.SKLearnModel": {"tf": 1}, "maps.models.PyTorchModel": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 1.7320508075688772}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_pytorch": {"tf": 1.7320508075688772}, "maps.fitters.sample_split_sklearn": {"tf": 1.4142135623730951}, "maps.analyses.MAP": {"tf": 1.4142135623730951}, "maps.analyses.MAP.run": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1.4142135623730951}}, "df": 16}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"maps.models.MultiAntibody.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.drop_na_features": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"maps.analyses.PCA": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"maps.screens.ScreenBase": {"tf": 1.4142135623730951}, "maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ScreenBase.preprocess": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 2}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 2}, "maps.processing.drop_sample_by_feature": {"tf": 2}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}, "maps.loaders": {"tf": 1.7320508075688772}, "maps.loaders.OperettaLoader": {"tf": 1.7320508075688772}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1.7320508075688772}, "maps.loaders.OperettaLoader.load_data": {"tf": 2}, "maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_mut": {"tf": 1.4142135623730951}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1.4142135623730951}, "maps.analyses.MAP.make_table": {"tf": 1.4142135623730951}}, "df": 30}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.analyses": {"tf": 1}}, "df": 6, "s": {"docs": {"maps.models.BaseModel": {"tf": 1}, "maps.loaders": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"maps.loaders": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"maps.screens.ImageScreenMultiAntibody": {"tf": 1}}, "df": 1, "s": {"docs": {"maps.screens.ImageScreen": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"maps.processing.drop_na_features": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.models": {"tf": 1.4142135623730951}, "maps.fitters": {"tf": 1}, "maps.analyses.MAP": {"tf": 2.6457513110645907}, "maps.analyses.MAP.__init__": {"tf": 2}, "maps.analyses.MAP.run": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1.4142135623730951}}, "df": 8, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.screens.ImageScreenMultiAntibody": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"maps.screens.ScreenBase.get_data": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}}, "df": 12}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"maps.processing.select_feature_types": {"tf": 1.7320508075688772}, "maps.processing.drop_feature_types": {"tf": 1.7320508075688772}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.select_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_feature_types": {"tf": 1.4142135623730951}, "maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.screens.ImageScreenMultiAntibody.preprocess": {"tf": 1}}, "df": 1}}}}}}}}}, "x": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1.4142135623730951}, "maps.models.Logistic": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.processing.pca_transform": {"tf": 1.4142135623730951}, "maps.processing.group_markers": {"tf": 1.7320508075688772}}, "df": 2, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"maps.processing.group_markers": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1.7320508075688772}, "maps.models.MultiAntibody.fit": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody.predict": {"tf": 1.4142135623730951}}, "df": 7, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}}, "df": 9}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"maps.models.MultiAntibody": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody.__init__": {"tf": 1.4142135623730951}}, "df": 2, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.models.MultiAntibody": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 5}}, "t": {"docs": {"maps.fitters": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_mut": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.fitters": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_mut": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"maps.screens.ImageScreenMultiAntibody": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.drop_na_features": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "n": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ScreenBase": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 3, "s": {"docs": {"maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}}, "df": 3}, "d": {"docs": {"maps.processing.drop_na_features": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"maps.screens.ImageScreen": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.Logistic": {"tf": 1.4142135623730951}, "maps.models.Logistic.predict": {"tf": 1.4142135623730951}, "maps.models.RandomForest": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 15}, "v": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.drop_feature_types": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "w": {"docs": {"maps.fitters": {"tf": 1.4142135623730951}}, "df": 1}, "l": {"docs": {}, "df": 0, "d": {"docs": {"maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 7}}}, "s": {"docs": {"maps.fitters.leave_one_out_pytorch": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}}, "df": 1, "y": {"docs": {"maps.analyses.MAP": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.analyses.PCA.fit": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"maps.screens": {"tf": 1}, "maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.4142135623730951}, "maps.processing.drop_na_features": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.subsample_rows_by_id": {"tf": 1.4142135623730951}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.models": {"tf": 1.4142135623730951}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.4142135623730951}, "maps.fitters": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.analyses": {"tf": 1.7320508075688772}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 34}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1.4142135623730951}, "maps.processing.subsample_rows_by_id": {"tf": 1.4142135623730951}, "maps.models.BaseModel.fit": {"tf": 2}, "maps.models.BaseModel.predict": {"tf": 2}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1.7320508075688772}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_sklearn": {"tf": 1.4142135623730951}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 26}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing": {"tf": 1}, "maps.fitters": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "n": {"docs": {"maps.processing": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1.7320508075688772}, "maps.fitters.sample_split_pytorch": {"tf": 1.7320508075688772}, "maps.fitters.sample_split_sklearn": {"tf": 1.7320508075688772}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1.4142135623730951}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 18, "e": {"docs": {"maps.screens.ImageScreen": {"tf": 1.4142135623730951}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 11}, "l": {"docs": {}, "df": 0, "y": {"docs": {"maps.processing.select_feature_types": {"tf": 1.7320508075688772}, "maps.processing.select_sample_by_feature": {"tf": 2}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1.4142135623730951}, "maps.fitters": {"tf": 1}}, "df": 5}}}, "r": {"docs": {"maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1.4142135623730951}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1.4142135623730951}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 22, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}}, "df": 2}, "s": {"docs": {"maps.processing.group_markers": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.group_markers": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.drop_na_features": {"tf": 1.4142135623730951}, "maps.processing.drop_constant_features": {"tf": 1.4142135623730951}, "maps.processing.select_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_feature_types": {"tf": 1.4142135623730951}, "maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_count": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.4142135623730951}, "maps.processing.subsample_rows_by_id": {"tf": 1.4142135623730951}, "maps.processing.pca_transform": {"tf": 1.4142135623730951}, "maps.processing.group_markers": {"tf": 1.4142135623730951}, "maps.processing.standardize_features": {"tf": 1.4142135623730951}, "maps.models.BaseModel": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 26, "s": {"docs": {"maps.processing": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out": {"tf": 2}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 1.4142135623730951}, "maps.fitters.sample_split": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1, "s": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"maps.analyses": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"maps.analyses.MAP.run": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}}, "df": 3}}}}}, "g": {"docs": {"maps.screens.ScreenBase": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_feature_types": {"tf": 1.4142135623730951}, "maps.processing.pca_transform": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.analyses": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 12, "d": {"docs": {"maps.fitters": {"tf": 1}, "maps.analyses": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.models.BaseModel": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"maps.analyses.MAP": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"maps.screens.ScreenBase.get_data": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}}, "df": 3}}, "t": {"docs": {"maps.screens.ImageScreen": {"tf": 3}, "maps.screens.ImageScreenMultiAntibody": {"tf": 3}, "maps.processing.drop_na_features": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1.7320508075688772}, "maps.processing.group_markers": {"tf": 1.4142135623730951}, "maps.analyses.PCA.fit": {"tf": 1.4142135623730951}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1.4142135623730951}, "maps.processing.group_markers": {"tf": 1.7320508075688772}}, "df": 3}}, "s": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1.4142135623730951}, "maps.processing.group_markers": {"tf": 2}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1.4142135623730951}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1.7320508075688772}}, "df": 4}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}}, "df": 3, "s": {"docs": {"maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1, "s": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1.4142135623730951}, "maps.processing.drop_na_features": {"tf": 1.4142135623730951}, "maps.processing.drop_constant_features": {"tf": 1.4142135623730951}, "maps.processing.select_sample_by_feature": {"tf": 2}, "maps.processing.drop_sample_by_feature": {"tf": 2}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 8}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"maps.screens.ImageScreen.load": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 7}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.analyses.PCA.fit": {"tf": 1}}, "df": 1, "s": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.models": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1.7320508075688772}, "maps.processing.standardize_features": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.drop_sample_by_feature": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"maps.models": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"maps.loaders.OperettaLoader": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.analyses.PCA": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}}, "df": 2}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.analyses": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 9, "s": {"docs": {"maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.fitters": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}}, "df": 10}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.drop_na_features": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_count": {"tf": 1}}, "df": 3, "s": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.processing.pca_transform": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing": {"tf": 1}, "maps.processing.drop_na_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.models.BaseModel.__init__": {"tf": 1}, "maps.models.SKLearnModel.__init__": {"tf": 1}, "maps.models.PyTorchModel.__init__": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.MultiAntibody.__init__": {"tf": 1}}, "df": 17}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreen": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.models.BaseModel": {"tf": 1}, "maps.models.Logistic": {"tf": 1.4142135623730951}, "maps.models.RandomForest": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 11}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 5}}, "n": {"docs": {"maps.models": {"tf": 1}, "maps.loaders": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"maps.processing.pca_transform": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"maps.screens.ImageScreen": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.processing.drop_na_features": {"tf": 2.449489742783178}, "maps.processing.drop_constant_features": {"tf": 1.7320508075688772}, "maps.processing.select_feature_types": {"tf": 2.449489742783178}, "maps.processing.drop_feature_types": {"tf": 2.449489742783178}, "maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_sample_by_feature": {"tf": 1.4142135623730951}, "maps.processing.drop_cells_by_count": {"tf": 2.23606797749979}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.7320508075688772}, "maps.processing.subsample_rows_by_id": {"tf": 1.4142135623730951}, "maps.processing.pca_transform": {"tf": 1.4142135623730951}, "maps.processing.group_markers": {"tf": 1.4142135623730951}, "maps.processing.standardize_features": {"tf": 1.4142135623730951}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.Logistic.__init__": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1.4142135623730951}, "maps.models.BinaryLogistic.predict": {"tf": 1.4142135623730951}, "maps.models.RandomForest": {"tf": 1}, "maps.models.RandomForest.__init__": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1.4142135623730951}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1.4142135623730951}, "maps.models.MultiAntibody.__init__": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1.7320508075688772}, "maps.loaders.OperettaLoader.__init__": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_sklearn": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_mut": {"tf": 1.4142135623730951}, "maps.fitters.sample_split": {"tf": 1.4142135623730951}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1.7320508075688772}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.__init__": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1.4142135623730951}}, "df": 44, "i": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.analyses": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.standardize_features": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.loaders": {"tf": 1.7320508075688772}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"maps.screens.ImageScreen": {"tf": 1.7320508075688772}, "maps.screens.ImageScreenMultiAntibody": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1.7320508075688772}, "maps.processing.subsample_rows_by_id": {"tf": 2}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1.4142135623730951}, "maps.loaders.OperettaLoader.load_data": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}, "maps.analyses.PCA.fit": {"tf": 1}}, "df": 11, "s": {"docs": {"maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.loaders": {"tf": 1}, "maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "t": {"docs": {"maps.processing.select_sample_by_feature": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.models.BaseModel": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.fitters.sample_split": {"tf": 1}}, "df": 5, "s": {"docs": {"maps.models": {"tf": 1}, "maps.fitters": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"maps.analyses.MAP.run": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1.7320508075688772}, "maps.models.RandomForest": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1.7320508075688772}}, "df": 4, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"maps.screens.ScreenBase.get_response": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.processing.subsample_rows_by_id": {"tf": 1.7320508075688772}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1}}, "i": {"docs": {"maps.loaders.OperettaLoader.__init__": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"maps.processing.drop_constant_features": {"tf": 1.4142135623730951}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ImageScreen.load": {"tf": 1.4142135623730951}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1.7320508075688772}, "maps.models.BaseModel.fit": {"tf": 2.23606797749979}, "maps.models.BaseModel.predict": {"tf": 2}, "maps.models.BaseModel.get_importance": {"tf": 1.7320508075688772}, "maps.models.Logistic.fit": {"tf": 1.4142135623730951}, "maps.models.Logistic.predict": {"tf": 1.4142135623730951}, "maps.models.Logistic.get_importance": {"tf": 1.7320508075688772}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1.4142135623730951}, "maps.models.RandomForest.predict": {"tf": 1.4142135623730951}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.models.MultiAntibody.fit": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}}, "df": 20}}, "t": {"docs": {"maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.models": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1.4142135623730951}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.MultiAntibody.predict": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 13, "e": {"docs": {"maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.loaders": {"tf": 1.4142135623730951}}, "df": 5}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing.standardize_features": {"tf": 1}, "maps.models.Logistic": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "a": {"docs": {"maps.processing.drop_na_features": {"tf": 2.6457513110645907}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders.OperettaLoader.load_data": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.sample_split_mut": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 4, "s": {"docs": {"maps.screens.ImageScreenMultiAntibody": {"tf": 1.7320508075688772}, "maps.screens.ImageScreenMultiAntibody.get_response": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1.4142135623730951}, "maps.processing.drop_feature_types": {"tf": 1.4142135623730951}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.loaders.OperettaLoader.load_metadata": {"tf": 1}, "maps.loaders.OperettaLoader.list_antibodies": {"tf": 1}}, "df": 9}}}, "s": {"docs": {"maps.processing.drop_na_features": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"maps.processing": {"tf": 1}, "maps.analyses": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"0": {"4": {"8": {"docs": {"maps.processing.drop_sample_by_feature": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "p": {"docs": {"maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}}, "df": 2}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"maps.screens.ImageScreen.load": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}}, "df": 4, "s": {"docs": {"maps.screens.ImageScreen.load": {"tf": 1}, "maps.screens.ImageScreenMultiAntibody.load": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}}, "df": 8}, "d": {"docs": {"maps.processing": {"tf": 1}, "maps.models": {"tf": 1.7320508075688772}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.fitters": {"tf": 1.4142135623730951}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}}, "df": 6}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.analyses.PCA": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.models.MultiAntibody": {"tf": 1}, "maps.fitters.leave_one_out_mut": {"tf": 1}, "maps.fitters.leave_one_out_pytorch": {"tf": 1}, "maps.fitters.sample_split_pytorch": {"tf": 1}, "maps.analyses.MAP": {"tf": 1}, "maps.analyses.MAP.run": {"tf": 1}, "maps.analyses.MAP.fit": {"tf": 1}}, "df": 7}}}}, "n": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing.drop_feature_types": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"maps.processing.standardize_features": {"tf": 1}}, "df": 1}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"maps.loaders.OperettaLoader.list_antibodies": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"maps.loaders": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.analyses": {"tf": 1}, "maps.analyses.MAP.__init__": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.models.BaseModel": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.MultiAntibody": {"tf": 1}}, "df": 4}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"maps.processing.drop_cells_by_feature_qt": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"maps.processing": {"tf": 1}, "maps.loaders.OperettaLoader": {"tf": 1}, "maps.analyses": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"maps.loaders.OperettaLoader.load_data": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"maps.fitters.leave_one_out_sklearn": {"tf": 1}, "maps.fitters.sample_split_sklearn": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 3}}}}}}, "x": {"docs": {"maps.processing.drop_na_features": {"tf": 1}, "maps.processing.drop_constant_features": {"tf": 1}, "maps.processing.select_feature_types": {"tf": 1}, "maps.processing.drop_feature_types": {"tf": 1}, "maps.processing.select_sample_by_feature": {"tf": 1}, "maps.processing.drop_sample_by_feature": {"tf": 1}, "maps.processing.drop_cells_by_count": {"tf": 1}, "maps.processing.drop_cells_by_feature_qt": {"tf": 1}, "maps.processing.subsample_rows_by_id": {"tf": 1}, "maps.processing.pca_transform": {"tf": 1}, "maps.processing.group_markers": {"tf": 1}, "maps.processing.standardize_features": {"tf": 1}, "maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.BaseModel.get_importance": {"tf": 1}, "maps.models.Logistic": {"tf": 1.4142135623730951}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.Logistic.predict": {"tf": 1}, "maps.models.Logistic.get_importance": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1.4142135623730951}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest": {"tf": 1.4142135623730951}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.RandomForest.get_importance": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1.4142135623730951}, "maps.models.BinaryRandomForest.predict": {"tf": 1}}, "df": 27}, "z": {"docs": {"maps.processing.standardize_features": {"tf": 1}}, "df": 1}, "y": {"docs": {"maps.models.BaseModel.fit": {"tf": 1}, "maps.models.BaseModel.predict": {"tf": 1}, "maps.models.Logistic": {"tf": 1}, "maps.models.Logistic.fit": {"tf": 1}, "maps.models.BinaryLogistic": {"tf": 1}, "maps.models.RandomForest": {"tf": 1}, "maps.models.RandomForest.fit": {"tf": 1}, "maps.models.BinaryRandomForest": {"tf": 1}}, "df": 8, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"0": {"docs": {"maps.models.Logistic.predict": {"tf": 1}}, "df": 1}, "1": {"docs": {"maps.models.Logistic.predict": {"tf": 1}}, "df": 1}, "docs": {"maps.models.BinaryLogistic": {"tf": 1}, "maps.models.BinaryLogistic.predict": {"tf": 1}, "maps.models.RandomForest.predict": {"tf": 1}, "maps.models.BinaryRandomForest.predict": {"tf": 1}, "maps.analyses.MAP.make_table": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"maps.analyses": {"tf": 1}}, "df": 1}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();